<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-03-20 13:51" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Wang Chang&#039;s Blog</title>
	<link>http://blog.wachang.net</link>
	<description>Just Be Interested In Internet</description>
	<pubDate>Wed, 20 Mar 2013 13:51:17 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://blog.wachang.net</wp:base_site_url>
	<wp:base_blog_url>http://blog.wachang.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>ati9550128m</wp:author_login><wp:author_email>wangchang365@outlook.com</wp:author_email><wp:author_display_name><![CDATA[ati9550128m]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>22</wp:term_id><wp:category_nicename>openflow</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[OpenFlow]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>23</wp:term_id><wp:category_nicename>openstack</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[OpenStack]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>28</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Python]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>27</wp:term_id><wp:category_nicename>web%e5%bc%80%e5%8f%91</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Web开发]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>%e5%8d%8f%e8%ae%ae%e5%ad%a6%e4%b9%a0</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[协议学习]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[技术学习]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[未分类]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[运维管理]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>amqp</wp:tag_slug><wp:tag_name><![CDATA[amqp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>cgi</wp:tag_slug><wp:tag_name><![CDATA[cgi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>fastcgi</wp:tag_slug><wp:tag_name><![CDATA[fastcgi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>gre</wp:tag_slug><wp:tag_name><![CDATA[GRE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>hadoop</wp:tag_slug><wp:tag_name><![CDATA[hadoop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>iptables</wp:tag_slug><wp:tag_name><![CDATA[iptables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>ldap</wp:tag_slug><wp:tag_name><![CDATA[ldap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>letodms</wp:tag_slug><wp:tag_name><![CDATA[letodms]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>letodms-ldap</wp:tag_slug><wp:tag_name><![CDATA[letodms.ldap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>nvgre</wp:tag_slug><wp:tag_name><![CDATA[NVGRE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>openstack-2</wp:tag_slug><wp:tag_name><![CDATA[openstack]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>openvpn</wp:tag_slug><wp:tag_name><![CDATA[openvpn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>openvswitch</wp:tag_slug><wp:tag_name><![CDATA[openvswitch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[php]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>php-cgi</wp:tag_slug><wp:tag_name><![CDATA[php-cgi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>php-fpm</wp:tag_slug><wp:tag_name><![CDATA[php-fpm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>python-2</wp:tag_slug><wp:tag_name><![CDATA[python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>rabbitmq</wp:tag_slug><wp:tag_name><![CDATA[rabbitmq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>tunnel</wp:tag_slug><wp:tag_name><![CDATA[tunnel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>wsgi</wp:tag_slug><wp:tag_name><![CDATA[wsgi]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>7</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>%e5%af%bc%e8%88%aa%e8%8f%9c%e5%8d%95</wp:term_slug><wp:term_name><![CDATA[导航菜单]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>logo</title>
		<link>http://blog.wachang.net/2013/02/test-2/logo/</link>
		<pubDate>Wed, 27 Feb 2013 10:40:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2013-02-27 18:40:00</wp:post_date>
		<wp:post_date_gmt>2013-02-27 10:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>30</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:52;s:6:"height";i:52;s:4:"file";s:16:"2013/02/logo.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-1</title>
		<link>http://blog.wachang.net/?attachment_id=41</link>
		<pubDate>Wed, 27 Feb 2013 13:19:47 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2013-02-27 21:19:47</wp:post_date>
		<wp:post_date_gmt>2013-02-27 13:19:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:712;s:6:"height";i:319;s:4:"file";s:24:"2013/02/amqp-intro-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"amqp-intro-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"amqp-intro-1-300x134.png";s:5:"width";i:300;s:6:"height";i:134;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-protocol</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-protocol/</link>
		<pubDate>Thu, 28 Feb 2013 11:54:29 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2013-02-28 19:54:29</wp:post_date>
		<wp:post_date_gmt>2013-02-28 11:54:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-protocol</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-protocol.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:303;s:6:"height";i:355;s:4:"file";s:25:"2013/02/amqp-protocol.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"amqp-protocol-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"amqp-protocol-256x300.png";s:5:"width";i:256;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-protocol-3</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-protocol-3/</link>
		<pubDate>Thu, 28 Feb 2013 12:00:30 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2013-02-28 20:00:30</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:00:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-protocol-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-protocol-3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:714;s:6:"height";i:117;s:4:"file";s:27:"2013/02/amqp-protocol-3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"amqp-protocol-3-150x117.png";s:5:"width";i:150;s:6:"height";i:117;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"amqp-protocol-3-300x49.png";s:5:"width";i:300;s:6:"height";i:49;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-protocol-2</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-protocol-2/</link>
		<pubDate>Thu, 28 Feb 2013 12:01:26 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2013-02-28 20:01:26</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:01:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-protocol-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-protocol-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:571;s:6:"height";i:239;s:4:"file";s:27:"2013/02/amqp-protocol-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"amqp-protocol-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"amqp-protocol-2-300x125.png";s:5:"width";i:300;s:6:"height";i:125;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-1</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-1-2/</link>
		<pubDate>Thu, 28 Feb 2013 12:02:25 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2013-02-28 20:02:25</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:02:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-1-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:712;s:6:"height";i:319;s:4:"file";s:25:"2013/02/amqp-intro-11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"amqp-intro-11-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"amqp-intro-11-300x134.png";s:5:"width";i:300;s:6:"height";i:134;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-3-fanout</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-3-fanout/</link>
		<pubDate>Thu, 28 Feb 2013 12:03:02 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-3-fanout.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2013-02-28 20:03:02</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:03:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-3-fanout</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-3-fanout.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-3-fanout.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:713;s:6:"height";i:447;s:4:"file";s:31:"2013/02/amqp-intro-3-fanout.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"amqp-intro-3-fanout-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"amqp-intro-3-fanout-300x188.png";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-2</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-2/</link>
		<pubDate>Thu, 28 Feb 2013 12:03:29 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2013-02-28 20:03:29</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:03:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:689;s:6:"height";i:511;s:4:"file";s:24:"2013/02/amqp-intro-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"amqp-intro-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"amqp-intro-2-300x222.png";s:5:"width";i:300;s:6:"height";i:222;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-4-e1</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-4-e1/</link>
		<pubDate>Thu, 28 Feb 2013 12:04:46 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2013-02-28 20:04:46</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:04:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-4-e1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-4-e1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:566;s:6:"height";i:160;s:4:"file";s:27:"2013/02/amqp-intro-4-e1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"amqp-intro-4-e1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"amqp-intro-4-e1-300x84.png";s:5:"width";i:300;s:6:"height";i:84;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-4-e2</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-4-e2/</link>
		<pubDate>Thu, 28 Feb 2013 12:05:20 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2013-02-28 20:05:20</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:05:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-4-e2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-4-e2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:574;s:6:"height";i:161;s:4:"file";s:27:"2013/02/amqp-intro-4-e2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"amqp-intro-4-e2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"amqp-intro-4-e2-300x84.png";s:5:"width";i:300;s:6:"height";i:84;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-4-e3</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-4-e3/</link>
		<pubDate>Thu, 28 Feb 2013 12:05:35 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2013-02-28 20:05:35</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:05:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-4-e3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-4-e3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:571;s:6:"height";i:156;s:4:"file";s:27:"2013/02/amqp-intro-4-e3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"amqp-intro-4-e3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"amqp-intro-4-e3-300x81.png";s:5:"width";i:300;s:6:"height";i:81;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-intro-4-e4</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-intro-4-e4/</link>
		<pubDate>Thu, 28 Feb 2013 12:05:44 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2013-02-28 20:05:44</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:05:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-intro-4-e4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-intro-4-e4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:582;s:6:"height";i:161;s:4:"file";s:27:"2013/02/amqp-intro-4-e4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"amqp-intro-4-e4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"amqp-intro-4-e4-300x82.png";s:5:"width";i:300;s:6:"height";i:82;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>amqp-logo</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/amqp-logo-2/</link>
		<pubDate>Thu, 28 Feb 2013 12:29:23 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/02/amqp-logo1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2013-02-28 20:29:23</wp:post_date>
		<wp:post_date_gmt>2013-02-28 12:29:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amqp-logo-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>54</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/02/amqp-logo1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/amqp-logo1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:90;s:4:"file";s:22:"2013/02/amqp-logo1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"amqp-logo1-150x90.png";s:5:"width";i:150;s:6:"height";i:90;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"amqp-logo1-300x42.png";s:5:"width";i:300;s:6:"height";i:42;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre-encap-1</title>
		<link>http://blog.wachang.net/2013/03/gre-study-note/gre-encap-1/</link>
		<pubDate>Tue, 05 Mar 2013 06:30:42 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre-encap-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2013-03-05 14:30:42</wp:post_date>
		<wp:post_date_gmt>2013-03-05 06:30:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre-encap-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>93</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre-encap-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre-encap-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:579;s:6:"height";i:340;s:4:"file";s:23:"2013/03/gre-encap-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"gre-encap-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:23:"gre-encap-1-300x176.png";s:5:"width";i:300;s:6:"height";i:176;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre-decap-1</title>
		<link>http://blog.wachang.net/2013/03/gre-study-note/gre-decap-1/</link>
		<pubDate>Tue, 05 Mar 2013 06:31:21 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre-decap-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2013-03-05 14:31:21</wp:post_date>
		<wp:post_date_gmt>2013-03-05 06:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre-decap-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>93</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre-decap-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre-decap-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:614;s:6:"height";i:328;s:4:"file";s:23:"2013/03/gre-decap-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"gre-decap-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:23:"gre-decap-1-300x160.png";s:5:"width";i:300;s:6:"height";i:160;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GRE-format</title>
		<link>http://blog.wachang.net/2013/03/gre-study-note/gre-format/</link>
		<pubDate>Tue, 05 Mar 2013 06:34:11 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/GRE-format.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2013-03-05 14:34:11</wp:post_date>
		<wp:post_date_gmt>2013-03-05 06:34:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre-format</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>93</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/GRE-format.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/GRE-format.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:580;s:6:"height";i:330;s:4:"file";s:22:"2013/03/GRE-format.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"GRE-format-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"GRE-format-300x170.png";s:5:"width";i:300;s:6:"height";i:170;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre-example</title>
		<link>http://blog.wachang.net/2013/03/gre-study-note/gre-example/</link>
		<pubDate>Tue, 05 Mar 2013 06:42:15 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre-example.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2013-03-05 14:42:15</wp:post_date>
		<wp:post_date_gmt>2013-03-05 06:42:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre-example</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>93</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre-example.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre-example.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:314;s:6:"height";i:83;s:4:"file";s:23:"2013/03/gre-example.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"gre-example-150x83.png";s:5:"width";i:150;s:6:"height";i:83;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"gre-example-300x79.png";s:5:"width";i:300;s:6:"height";i:79;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre-example-2</title>
		<link>http://blog.wachang.net/2013/03/gre-study-note/gre-example-2/</link>
		<pubDate>Tue, 05 Mar 2013 06:55:27 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre-example-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2013-03-05 14:55:27</wp:post_date>
		<wp:post_date_gmt>2013-03-05 06:55:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre-example-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>93</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre-example-2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre-example-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:586;s:6:"height";i:348;s:4:"file";s:25:"2013/03/gre-example-2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"gre-example-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"gre-example-2-300x178.png";s:5:"width";i:300;s:6:"height";i:178;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iptables-workflow</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-1/iptables-workflow/</link>
		<pubDate>Thu, 07 Mar 2013 17:02:13 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/iptables-workflow.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2013-03-08 01:02:13</wp:post_date>
		<wp:post_date_gmt>2013-03-07 17:02:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iptables-workflow</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>112</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/iptables-workflow.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/iptables-workflow.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1032;s:6:"height";i:533;s:4:"file";s:29:"2013/03/iptables-workflow.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"iptables-workflow-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"iptables-workflow-300x154.jpg";s:5:"width";i:300;s:6:"height";i:154;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"iptables-workflow-1024x528.jpg";s:5:"width";i:1024;s:6:"height";i:528;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iptables-example-1</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-1/iptables-example-1/</link>
		<pubDate>Thu, 07 Mar 2013 17:05:09 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2013-03-08 01:05:09</wp:post_date>
		<wp:post_date_gmt>2013-03-07 17:05:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iptables-example-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>112</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/iptables-example-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1389;s:6:"height";i:261;s:4:"file";s:30:"2013/03/iptables-example-1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"iptables-example-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"iptables-example-1-300x56.jpg";s:5:"width";i:300;s:6:"height";i:56;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"iptables-example-1-1024x192.jpg";s:5:"width";i:1024;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>示例页面</title>
		<link>http://blog.wachang.net/sample-page/</link>
		<pubDate>Wed, 27 Feb 2013 05:58:45 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如，个人博客通常有类似这样的介绍：

<blockquote>欢迎！我白天是个邮递员，晚上就是个有抱负的演员。这是我的博客。我住在天朝的帝都，有条叫做杰克的狗。</blockquote>

... 公司博客可以这样写：

<blockquote>XYZ Doohickey 公司成立于 1971 年，自从建立以来，我们一直向社会贡献着优秀 doohicky。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。</blockquote>

您可以访问<a href="http://blog.wachang.net/wp-admin/">仪表盘</a>，删除本页面，然后添加您自己的内容。祝您使用愉快！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2013-02-27 05:58:45</wp:post_date>
		<wp:post_date_gmt>2013-02-27 05:58:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361946745]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于我</title>
		<link>http://blog.wachang.net/about/</link>
		<pubDate>Wed, 27 Feb 2013 06:32:01 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?page_id=10</guid>
		<description></description>
		<content:encoded><![CDATA[##等待编辑]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2013-02-27 14:32:01</wp:post_date>
		<wp:post_date_gmt>2013-02-27 06:32:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>极速版</title>
		<link>http://blog.wachang.net/%e6%9e%81%e9%80%9f%e7%89%88/</link>
		<pubDate>Wed, 27 Feb 2013 09:59:49 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?page_id=27</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2013-02-27 17:59:49</wp:post_date>
		<wp:post_date_gmt>2013-02-27 09:59:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9e%81%e9%80%9f%e7%89%88</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1362844776]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>也说OpenVPN性能优化加速</title>
		<link>http://blog.wachang.net/?p=105</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[<p>http://digest.definite.name/a-hands-to-write-an-openvpn-wrapper-to-optimize-the-openvpn-performance.html</p>

<p>关于openvpn文章目录
http://blog.csdn.net/dog250/article/details/6990814</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2013-03-05 18:11:46</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://blog.wachang.net/?p=109</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Linux/Ubuntu 如何查看和杀死僵尸进程</h2>

<p>http://blog.51osos.com/linux/linux-how-to-kill-zombie-process/</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2013-03-07 00:17:11</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenVPN配置解释</title>
		<link>http://blog.wachang.net/?p=110</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[<p>local 222.197.180.135
port 1194
proto udp</p>

<p>ca /etc/openvpn/ca.crt
cert /etc/openvpn/myservername.crt
key /etc/openvpn/myservername.key</p>

<p>dh /etc/openvpn/dh1024.pem 哈弗曼参数</p>

<p>server 10.8.0.0 255.255.255.0 。1作为自己使用
ifconfig-pool-persist /var/log/openvpn/ipp.txt 记录用户IP的
push "route 192.168.1.0 255.255.255.0"
push "redirect-gateway def1 bypass-dhcp bypass-dns" 客户端所有流量走VPN</p>

<p>push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"推送DNS
client-to-client
duplicate-cn
keepalive 10 120盘算死没死
comp-lzo压缩</p>

<p>http://blog.sina.com.cn/s/blog_54bf138001000800.html
http://blog.sina.com.cn/s/blog_54bf138001000801.html</p>

<p>Nginx&amp;&amp;PHP-FPM配置及优化指南（上）
http://blog.csdn.net/uuleaf/article/details/7739538</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2013-03-07 22:02:21</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iptables-example-2</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-1/iptables-example-2/</link>
		<pubDate>Thu, 07 Mar 2013 17:06:07 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2013-03-08 01:06:07</wp:post_date>
		<wp:post_date_gmt>2013-03-07 17:06:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iptables-example-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>112</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/iptables-example-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1896;s:6:"height";i:332;s:4:"file";s:30:"2013/03/iptables-example-2.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"iptables-example-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"iptables-example-2-300x52.jpg";s:5:"width";i:300;s:6:"height";i:52;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"iptables-example-2-1024x179.jpg";s:5:"width";i:1024;s:6:"height";i:179;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iptables-example-3</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-1/iptables-example-3/</link>
		<pubDate>Thu, 07 Mar 2013 17:06:54 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2013-03-08 01:06:54</wp:post_date>
		<wp:post_date_gmt>2013-03-07 17:06:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iptables-example-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>112</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/iptables-example-3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1893;s:6:"height";i:418;s:4:"file";s:30:"2013/03/iptables-example-3.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"iptables-example-3-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"iptables-example-3-300x66.jpg";s:5:"width";i:300;s:6:"height";i:66;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"iptables-example-3-1024x226.jpg";s:5:"width";i:1024;s:6:"height";i:226;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tables_traverse</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-1/tables_traverse/</link>
		<pubDate>Thu, 07 Mar 2013 17:07:14 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/tables_traverse.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2013-03-08 01:07:14</wp:post_date>
		<wp:post_date_gmt>2013-03-07 17:07:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tables_traverse</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>112</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/tables_traverse.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/tables_traverse.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:525;s:6:"height";i:585;s:4:"file";s:27:"2013/03/tables_traverse.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"tables_traverse-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"tables_traverse-269x300.jpg";s:5:"width";i:269;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://blog.wachang.net/2013/03/121/</link>
		<pubDate>Fri, 08 Mar 2013 08:38:47 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2013-03-08 16:38:47</wp:post_date>
		<wp:post_date_gmt>2013-03-08 08:38:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>121</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa%e8%8f%9c%e5%8d%95"><![CDATA[导航菜单]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>极速版</title>
		<link>http://blog.wachang.net/2013/03/%e6%9e%81%e9%80%9f%e7%89%88/</link>
		<pubDate>Fri, 08 Mar 2013 08:38:47 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=122</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2013-03-08 16:38:47</wp:post_date>
		<wp:post_date_gmt>2013-03-08 08:38:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9e%81%e9%80%9f%e7%89%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa%e8%8f%9c%e5%8d%95"><![CDATA[导航菜单]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[122]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://op.wachang.net]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://blog.wachang.net/?p=129</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2013-03-08 18:39:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>微博</title>
		<link>http://blog.wachang.net/2013/03/%e5%be%ae%e5%8d%9a%e6%88%91/</link>
		<pubDate>Sat, 09 Mar 2013 15:59:08 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2013-03-09 23:59:08</wp:post_date>
		<wp:post_date_gmt>2013-03-09 15:59:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%be%ae%e5%8d%9a%e6%88%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%af%bc%e8%88%aa%e8%8f%9c%e5%8d%95"><![CDATA[导航菜单]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[136]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://weibo.com/clusky]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>openvswitch-gre</title>
		<link>http://blog.wachang.net/2013/03/openvswitch-configure-gre-note-1/openvswitch-gre/</link>
		<pubDate>Wed, 13 Mar 2013 14:52:54 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/openvswitch-gre.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2013-03-13 22:52:54</wp:post_date>
		<wp:post_date_gmt>2013-03-13 14:52:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openvswitch-gre</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>138</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/openvswitch-gre.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/openvswitch-gre.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:666;s:6:"height";i:409;s:4:"file";s:27:"2013/03/openvswitch-gre.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"openvswitch-gre-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"openvswitch-gre-300x184.jpg";s:5:"width";i:300;s:6:"height";i:184;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:27:"openvswitch-gre-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sit_tunnel1</title>
		<link>http://blog.wachang.net/2013/03/tunnel-techology-note/sit_tunnel1/</link>
		<pubDate>Wed, 13 Mar 2013 15:13:42 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/sit_tunnel1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2013-03-13 23:13:42</wp:post_date>
		<wp:post_date_gmt>2013-03-13 15:13:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sit_tunnel1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>151</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/sit_tunnel1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/sit_tunnel1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:794;s:6:"height";i:442;s:4:"file";s:23:"2013/03/sit_tunnel1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"sit_tunnel1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"sit_tunnel1-300x167.jpg";s:5:"width";i:300;s:6:"height";i:167;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:23:"sit_tunnel1-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre_tunnel1</title>
		<link>http://blog.wachang.net/2013/03/tunnel-techology-note/gre_tunnel1/</link>
		<pubDate>Wed, 13 Mar 2013 15:14:52 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre_tunnel1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2013-03-13 23:14:52</wp:post_date>
		<wp:post_date_gmt>2013-03-13 15:14:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre_tunnel1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>151</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre_tunnel1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre_tunnel1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:794;s:6:"height";i:442;s:4:"file";s:23:"2013/03/gre_tunnel1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"gre_tunnel1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"gre_tunnel1-300x167.jpg";s:5:"width";i:300;s:6:"height";i:167;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:23:"gre_tunnel1-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre_tunnel</title>
		<link>http://blog.wachang.net/2013/03/tunnel-techology-note/gre_tunnel/</link>
		<pubDate>Wed, 13 Mar 2013 15:15:32 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre_tunnel.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2013-03-13 23:15:32</wp:post_date>
		<wp:post_date_gmt>2013-03-13 15:15:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre_tunnel</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>151</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre_tunnel.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre_tunnel.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:847;s:6:"height";i:445;s:4:"file";s:22:"2013/03/gre_tunnel.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"gre_tunnel-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"gre_tunnel-300x157.jpg";s:5:"width";i:300;s:6:"height";i:157;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:22:"gre_tunnel-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gre_header</title>
		<link>http://blog.wachang.net/2013/03/tunnel-techology-note/gre_header/</link>
		<pubDate>Wed, 13 Mar 2013 15:16:39 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/gre_header.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2013-03-13 23:16:39</wp:post_date>
		<wp:post_date_gmt>2013-03-13 15:16:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre_header</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>151</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/gre_header.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/gre_header.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:479;s:6:"height";i:119;s:4:"file";s:22:"2013/03/gre_header.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"gre_header-150x119.png";s:5:"width";i:150;s:6:"height";i:119;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"gre_header-300x74.png";s:5:"width";i:300;s:6:"height";i:74;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EHO ARCH</title>
		<link>http://blog.wachang.net/2013/03/mirantis-elastic-hadoop-on-openstack/eho-arch/</link>
		<pubDate>Tue, 19 Mar 2013 14:27:40 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/EHO-ARCH.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2013-03-19 22:27:40</wp:post_date>
		<wp:post_date_gmt>2013-03-19 14:27:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eho-arch</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/EHO-ARCH.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/EHO-ARCH.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:787;s:6:"height";i:453;s:4:"file";s:20:"2013/03/EHO-ARCH.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"EHO-ARCH-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"EHO-ARCH-300x172.jpg";s:5:"width";i:300;s:6:"height";i:172;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:20:"EHO-ARCH-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nvgre-cross-subnets</title>
		<link>http://blog.wachang.net/2013/03/nvgre-network-virtualization-using-generic-routing-encapsulation/nvgre-cross-subnets/</link>
		<pubDate>Tue, 19 Mar 2013 15:22:17 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/wp-content/uploads/2013/03/nvgre-cross-subnets.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2013-03-19 23:22:17</wp:post_date>
		<wp:post_date_gmt>2013-03-19 15:22:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nvgre-cross-subnets</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.wachang.net/wp-content/uploads/2013/03/nvgre-cross-subnets.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/03/nvgre-cross-subnets.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:633;s:6:"height";i:747;s:4:"file";s:31:"2013/03/nvgre-cross-subnets.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"nvgre-cross-subnets-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:31:"nvgre-cross-subnets-254x300.jpg";s:5:"width";i:254;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:31:"nvgre-cross-subnets-633x200.jpg";s:5:"width";i:633;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LetoDMS文档管理系统配置LDAP认证</title>
		<link>http://blog.wachang.net/2013/02/configure-letodms-with-ldap/</link>
		<pubDate>Wed, 27 Feb 2013 11:52:41 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<p>LetoDMS(http://www.letodms.com/)是一个免费开源的文档管理系统，适合小型企业或者组织用来做整个的文档管理。因为是我们实验室需要相应的文档管理服务，所以在Opendocman和LetoDMS中都适用了一下，总的来看，有一下特点：</p>

<ul>
<li>Opendocman:界面清爽，中文支持较好，不支持LDAP，使用上不太友好。</li>
<li>LetoDMS:界面不是很好看，但是使用很上手，最重要的，支持LDAP。</li>
</ul>

<p>LetoDMS虽说支持LDAP，但是官网上木有配置文档，网上也没多少资料，自己折腾了好久，然后对着代码一步步Debug,才终于搞定，下面做一个记录。</p>

<!--more-->

<h2>LetoDMS中LDAP验证过程</h2>

<p>在LetoDMS中，配置了LDAP以后，会用登陆的uid和密码去匹配LDAP服务器中DN下的uid和密码，成功后再与LetoDMS本地用户数据库进行匹配：1）如果本地LetoDMS中木有相应的用户信息，则根据CN名字信息和UID等创建用户，但不设置密码；2）如果已经有相应的用户信息，则允许登陆，相应的LDAP认证代码在<strong>/op/op.Login.php</strong>中。</p>

<h2>LetoDMS中LDAP验证配置</h2>

<p>在conf/settings.xml中配置LDAP信息，有两个地方:</p>

<pre><code>&lt;authentication enableGuestLogin="false" enablePasswordForgotten="false" restricted="false" enableUserImage="false" disableSelfEdit="false" passwordStrength="0" passwordExpiration="0" passwordHistory="0" passwordStrengthAlgorithm="simple" loginFailure="0" encryptionKey="88401c30b26bdf44f0facbf62849cf1e"&gt;  
</code></pre>

<p>这里的restricted一定要设置为false。当然，这一个也可以通过admin登陆以后，在全局settings里设置。随后，设置LDAP信息：</p>

<pre><code>&lt;connector enable="enable" type="ldap" host="ldap.oinlab.com" port="389" baseDN="ou=People,dc=oinlab"&gt;
</code></pre>

<p>如果此时没效果，别急，编辑<code>inc/inc.ClassSettings.php</code>，再找到如下变量并设置好：</p>

<pre><code>// LDAP
var $_ldapHost = "ldap.oinlab.com"; // URIs are supported, e.g.: ldaps://ldap.host.com
var $_ldapPort = 389; // Optional.
var $_ldapBaseDN = "ou=People,dc=oinlab";
var $_ldapAccountDomainName = "oinlab";
var $_ldapType = 0; // 0 = ldap; 1 = AD
var $_converters = array(); // list of commands used to convert files to text for Indexer
</code></pre>

<p>注意，实际上这个inc中的才是最基本的，这里面的变量值是通过读取<code>conf/setting.xml</code>中的值来的，当然，改了这里面的值得话settings.xml文件也无效了。最后，LetoDMS中相应的LDAP登陆代码位于<code>op/op.Login.php</code>中，有问题的话可以根据这里的代码做一些DEBUG.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2013-02-27 19:52:41</wp:post_date>
		<wp:post_date_gmt>2013-02-27 11:52:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configure-letodms-with-ldap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ldap"><![CDATA[ldap]]></category>
		<category domain="post_tag" nicename="letodms"><![CDATA[letodms]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[letodms%e6%96%87%e6%a1%a3%e7%ae%a1%e7%90%86%e7%b3%bb%e7%bb%9f%e9%85%8d%e7%bd%aeldap%e8%ae%a4%e8%af%81]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[letodms,ldap]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[LetoDMS文档管理系统配置LDAP认证]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[LetoDMS文档管理系统配置LDAP认证]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[ati9550128m]]></wp:comment_author>
			<wp:comment_author_email>wangchang365@outlook.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>120.94.192.33</wp:comment_author_IP>
			<wp:comment_date>2013-03-03 15:06:29</wp:comment_date>
			<wp:comment_date_gmt>2013-03-03 07:06:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>可以评论么？</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AMQP&amp;RabbitMQ协议及模型入门介绍</title>
		<link>http://blog.wachang.net/2013/02/introduce-to-amqp-rabbitmq/</link>
		<pubDate>Thu, 28 Feb 2013 11:58:38 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>1本文主要是翻译加总结，通过资料的查询，对AMQP有一定了解; 2 RabbitMQ使用的就是AMQP 0-9-1模型，所以本文其实也是在讲RabbitMQ中的一些原理; 3 文末会列出原文地址</p>
</blockquote>

<h2>1 What is AMQP?</h2>

<p>AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，一个网络应用层协议的开放标准，为面向消息的中间件设计。</p>

<p>说白了，这就是一个消费者生产者模型，生产者生产出一个消息，发送到一个队列Queue，消费者(也叫做worker)从队列里面取出这个消息。但是AMQP中，这个消息一般来说是一个任务，生产者消费者一般不在同一台机器上，所以，更好的解释就是，一个程序发送一个任务消息给一个队列，然后消费者程序从队列中拿出这个任务信息，进行执行，可能还需要返回结果。</p>

<p>而RabbitMQ，就是实现了这么一个模型的软件，独立的开源实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、 Ruby、.NET、Java、JMS、C、PHP、 ActionScript、XMPP、STOMP等，支持AJAX。RabbitMQ就是一个服务器，实现了队列的管理，一个程序连接这个服务器，把任务发送给服务器（也即是进入了队列），消费者连接服务器，从队列中取出任务消息，然后执行。</p>

<p>中英文对照： Messaging broker:消息协商器,它在TCP/IP等端口监听AMQ消息，其实就是AMQP的实现，比如RabbitMQ等。 producers：应用程序，产生消息，并publish到消息队列中，下文简称P。 consumers：应用程序，接收消息，然后进行处理，下文简称C。 AMQP client：AMQP客户端，指与AMQP broker连接的P或者C。</p>

<h2>2 AMQP协议</h2>

<h3>2.1 协议概述</h3>

<p>从整体来看，AMQP协议可划分为三层： <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-2.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-256x300.png" alt="amqp-protocol" width="256" height="300" class="alignnone size-medium wp-image-55" /></a> AMQP定义了合适的服务器端域模型，用于规范服务器的行为(AMQP服务器端可称为broker)。在这里Model层决定这些基本域模型所产生的行为，这种行为在AMQP中用”command”表示，在后文中会着重来分析这些域模型。Session层定义客户端与broker之间的通信(通信双方都是一个peer，可互称做partner)，为command的可靠传输提供保障。Transport层专注于数据传送，并与Session保持交互，接受上层的数据，组装成二进制流，传送到receiver后再解析数据，交付给Session层。Session层需要Transport层完成网络异常情况的汇报，顺序传送command等工作。</p>

<h3>2.2 协议模型</h3>

<p>AMQP broker主要功能是消息的路由(Routing)和缓存(Buffering)，如下图： <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-2.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-2.png" alt="amqp-protocol-2" width="571" height="239" class="alignnone size-full wp-image-59" /></a> Exchange接收消息生产者(Producer)发送的消息根据不同的路由算法将消息发送往Message queue。Message queue会在消息不能被正常消费时缓存这些消息，具体的缓存策略由实现者决定，当message queue与消息消费者(Message consumer)之间的连接通畅时，Message queue有将消息转发到consumer的责任。</p>

<p>Message是当前模型中所操纵的基本单位,基本结构有两部分: Header和Body(playload),Header是由Producer添加上的各种属性的集合，这些属性有控制Message是否可被缓存，接收的queue是哪个，优先级是多少等。Body是真正需要传送的数据，它是对Broker不可见的二进制数据流，在传输过程中不应该受到影响。</p>

<p>一个broker中会存在多个Message queue，Exchange通过binding知道要把消息发送到哪个Message queue,在创建Message queue后需要确定它来接收并保存哪个Exchange路由的结果。Binding是用来关联Exchange与Message queue的域模型,通过关键字bindinds_key。</p>

<p>在与多个Message queue关联后，Exchange中就会存在一个路由表，这个表中存储着每个Message queue所需要消息的限制条件。Exchange就会检查它接受到的每个Message的Header及Body信息，来决定将Message路由到哪个queue中去。Message的Header中应该有个属性叫Routing Key，它由Message发送者产生，提供给Exchange路由这条Message的标准。Exchange根据不同路由算法有不同有Exchange Type。比如有Direct类似，需要Binding key 等于Routing key；也有Binding key与Routing key符合一个模式关系；也有根据Message包含的某些属性来判断。一些基础的路由算法由AMQP所提供，client application也可以自定义各种自己的扩展路由算法。 <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-3.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-protocol-3.png" alt="amqp-protocol-3" width="714" height="117" class="alignnone size-full wp-image-58" /></a> 对于，上图，有一些具体的概念，下面会详细讨论。</p>

<h3>2.3 AMQP 0-9-1 Model流程</h3>

<p>AMQP 0-9-1 Model可以简单的总结如下:P产生消息，然后publish(发布)到exchange(交换机，类比成邮政的邮筒吧)，exchange根据一个规则(bindinds)把消息发送到队列(queue)中，消息协商器要么把消息传递给等待(订阅subdcribe)在某一队列上的的消费者(consumers)，要么消费者就从队列中根据自己的需要取消息。如下图： <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-11.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-11.png" alt="amqp-intro-1" width="712" height="319" class="alignnone size-full wp-image-60" /></a></p>

<p>当publish消息的时候，P可能还会指定消息的属性（meta-data），可能一些meta会被broker使用，而其余的都是由C来使用的。</p>

<p>因为网络不可靠，应用可能处理消息的时候就挂掉了，所以就有一个<code>消息确认机制message acknowledgements</code>:当消息传递给C的时候需要通知broker。当使用消息确认机制的时候，一个broker只有在收到C对于此消息已经被接收的通知后才会删除消息。</p>

<p>某些场景，消息发不到合适的C的时候，消息可能会被返回给P，丢弃，或者说放进一个“死亡队列”，由P来决定如何操作。</p>

<p>队列，交换机，绑定作为AMQP中协作的三个元素。（Queues, exchanges and bindings are collectively referred to as AMQP entities.）</p>

<h2>3 Exchanges and Exchange Types交换机和交换类型</h2>

<p>交换机可以理解成具有路由表的路由程序，仅此而已。每个消息都有一个称为路由键（routing key）的属性，就是一个简单的字符串。交换机当中有一系列的绑定（binding），即路由规则（routes），例如，指明具有路由键 “X” 的消息要到名为timbuku的队列当中去。</p>

<p>交换机从P中接收到一个消息，然后路由(route)发送到一个或者多个队列，AMQP 0-9-1 brokers提供了四种交换类型。</p>

<pre><code>交换类型                默认名字
Direct exchange      空字符串或者amq.direct
Fanout exchange      amq.Fanout
Topic exchange       amq.Topic
Headers exchange     amq.match (and amq.headers in RabbitMQ)
</code></pre>

<p>除了交换类型以后，定义交换机的时候还有其他的属性，最重要的几个是：</p>

<ul>
<li>Name</li>
<li>Durability（当broker重启后交换机是否能继续工作）</li>
<li>Auto-delete（所有队列都适用完以后，交换机就被删除）</li>
<li>Arguments（根据broker的选择而定）</li>
</ul>

<p>exchanges交换机有两种模式(交换模式与交换类型概念不一样)，Durability表示在broker重启的时候能够恢复之前的工作，而transient模式下则会丢失之前的数据。</p>

<h3>3.1 默认交换exchange</h3>

<p>默认的交换机是一个已经预定义了的没有名字的Direct交换模式，他有一个简单的特性：每创建一个队列，都会通过一个routing&#95;key与exchange绑定，而这个routing&#95;key是和队列名字一样的。</p>

<h3>3.2 直接交换Direct exchange</h3>

<p>处理路由键。需要将一个队列绑定到交换机上，要求该消息与一个特定的路由键完全匹配。这是一个完整的匹配。如果一个队列绑定到该交换机上要求路由键 “dog”，则只有被标记为“dog”的消息才被转发，不会转发dog.puppy，也不会转发dog.guard，只会转发dog。</p>

<ul>
<li>一个队列通过routing_key K与一个exchange绑定。</li>
<li>当一个携带routing_key K的消息到达exchange的时候，exchange将消息路由给队列。</li>
</ul>

<p>直接交换主要用来在多个C，或者说worker（相同的程序实例）之间通过轮训方式分发任务，但是要记住，在AMQP 0-9-1中，消息时在C之间进行负载均衡而不是队列之间进行的。直接交换可以看看下图： <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-2.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-2.png" alt="amqp-intro-2" width="689" height="511" class="alignnone size-full wp-image-62" /></a></p>

<h3>3.3 fanout Exchange</h3>

<p>fanout模式将消息发送给所有与之绑定的队列，不处理路由键。你只需要简单的将队列绑定到交换机上。一个发送到交换机的消息都会被转发到与该交换机绑定的所有队列上。很像子网广播，每台子网内的主机都获得了一份复制的消息。Fanout交换机转发消息是最快的。如下图： <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-3-fanout.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-3-fanout.png" alt="amqp-intro-3-fanout" width="713" height="447" class="alignnone size-full wp-image-61" /></a></p>

<h3>3.4 Topic exchange</h3>

<p>根据消息的routing_key以及队列和交换机绑定的类型，Topic Exchange把消息传递给一个或者多个队列。这就是一个多播的概念。当场景中需要多个C，并且C是有根据的获得消息的时候，Topic Exchange就应该被考虑。具体来说，就是将路由键和某模式进行匹配。此时队列需要绑定要一个模式上。符号“#”匹配一个或多个词，符号“<em>”匹配不多不少一个词。因此“audit.#”能够匹配到“audit.irs.corporate”，但是“audit.</em>” 只会匹配到“audit.irs”。</p>

<h3>3.5 Headers Exchange</h3>

<p>如果不适应routing&#95;key，而是根据消息的多个属性（表现为消息头的形式）的交换就是Headers Exchange，Headers Exchange会忽略routing&#95;key值，相反，用来路由的信息实行消息的头属性中获得的。</p>

<h2>5 队列Queue</h2>

<p>在AMQP中队列就是一个消息的管道，存储C需要的消息，队列知道exchange的一些属性，同时增加了一些自己的属性：</p>

<ul>
<li>名字</li>
<li>持续性（Durability），队列在broker重启后恢复</li>
<li>Exclusive，单个连接中使用，连接断掉后队列被删除</li>
<li>auto-delete：当C不在获得消息的时候队列被删除</li>
<li>Arguments：一些broker自己实现的附加功能</li>
</ul>

<p>在队列使用之前必须被申明（declare），当队列不存在的时候申明队列会创建一个队列，如果队列已经存在，申明队列就不会进行其他操作，但是可以完成对队列存在与否的确认。</p>

<h3>5.1 Queue Names</h3>

<p>应用需要提供队列名，这样broker才能产生一个相应的队列。UTF-8格式，最多255字节，提供一个空字符作为队列名的话，broker会产生一个唯一的队列，同样的方式在C端也可以保证C取得的是P端产生的对应序列，因为P,C都是在一个channel下，而channel是能够记住上一次服务器产生的队列名的。</p>

<p>队列名以"amq."开头的是用于broker内部使用的队列。</p>

<h3>5.2 Queue Durability</h3>

<p>持续当broker重启的时候队列能够恢复，不具有持续性的队列就叫做transient。但是，<code>这里队列的持续性只是当broker重启的时候会自动重新申明队列，而要保证消息不丢失，还需要设置消息为永久性的（消息就存于磁盘而不是内存中）。</code></p>

<h3>5.3 Bindings</h3>

<p>bindings就是一些规则，用来决定消息要路由到哪个队列中去，比如，需要一个交换机E路由一个消息到队列Q，则Q需要先和E进行绑定。Bindings可能需要一些可选的routing&#95;key，routing&#95;key的作用就是选择被publish的特定信息到相应绑定的队列，换句话说，routing_key有点像是一个过滤器。举个例子:</p>

<ul>
<li>你住在纽约，队列就相当于你的目的地</li>
<li>交换机就相当于XXX航空</li>
<li>bindinds就XXX航空到你的住址的线路，可能没得，也可能有多条</li>
</ul>

<p>如果消息无法送到相应的队列，那么就会丢弃或者返回给P,这些就看相应的机制是怎么样的了。</p>

<h3>5.6 Consumers</h3>

<p>在队列中存储的消息一定要被C所使用。在AMQP 0-9-1模型中，应用程序有两种处理消息的模式：</p>

<ul>
<li>队列主动把消息传递给C应用(push API)</li>
<li>C从队列中抓取自己需要的消息(pull API)</li>
</ul>

<p>在push模式下，应用C需要指明对哪个序列的哪类消息感兴趣，我们称此时队列注册了一个C，或者C订阅了一个队列。一个队列可以有多个C。</p>

<p>每个C都有一个标示符叫做consumer tag，可以用来取消(unsubscribe)对队列消息的订阅，这个tag是一个字符串。</p>

<h2>6 Message消息</h2>

<h3>6.1 Message Acknowledgements 消息确认机制</h3>

<p>Consumer applications-取得消息并且处理消息的应用，有时候可能会因为各种问题挂掉，于是乎就有，AMQP broker如何知道这个消息已经被C接收，是可以删除掉了？AMQP标准中给出了两个选择：</p>

<ul>
<li>在broker向C应用发送了一个消息后，消息可以被删除(使用basic.deliver or basic.get-ok AMQP方法)</li>
<li>在C应用返回了一个确认ACK消息以后，消息可以被删除(使用basic.ack AMQP方法)</li>
</ul>

<p>前一种被叫做自动确认模型(automatic acknowledgement model)，后一种被叫做严格确认模型?(explicit acknowledgement model),在严格模式下C可以选择何时返回这个ACK信息。可以在接收消息的时候就返回，或者处理完消息携带的任务信息以后再返回。</p>

<p>如果C挂掉，并且没有返回ACK信息，那么AMQP broker就会把消息传递给其他的C，如果当前没有可用的C存在，broker就等待，知道有新的C加入进来。</p>

<h3>6.2 Rejecting Messages拒绝消息</h3>

<p>当C取得了消息，但是处理过程中可能不成功，此时C就需要通过拒绝消息机制告诉broker这个消息处理失败，当拒绝消息的时候，C可以要求broker忽略或者从新把消息入队。</p>

<h3>6.3 Negative acknowledgements</h3>

<p>通过<code>basic.reject AMQP</code>方法消息就会被拒绝，但是这个方法有个限制：没办法拒绝一连串的多个消息，但是在RabbitMQ中，有一个解决方案，RabbitMQ提出了一种negative acknowledgements(nacks)机制，更多请参考RabbitMQ手册。</p>

<h3>6.4 Prefetching Messages</h3>

<p>在多个C存在的时候，最好有一种机制指定每个C在返回ACK之前最多能接收多少个消息，这个就有点像负载均衡的思想了。</p>

<h3>6.5 Message Attributes and Payload</h3>

<p>在AMQP中的消息时可以附带属性值(attributes)的，一些常见的属性有：</p>

<ul>
<li>Content type</li>
<li>Content encoding</li>
<li>Routing key</li>
<li>Delivery mode (persistent or not)</li>
<li>Message priority</li>
<li>Message publishing timestamp</li>
<li>Expiration period</li>
<li>Producer application id</li>
</ul>

<p>一些属性可以被选作是消息的头信息。类似HTTP中的X-headers。AMQP消息也有一个负载段（playload），承载相应的数据。broker不会检测和修改负载，当消息被设置成persistent的时候，AMQP broker就会把消息存在磁盘中而不会丢失了。</p>

<h3>6.6 Message acknowledgements</h3>

<h2>7 AMQP 0-9-1 Methods</h2>

<p>AMQP 0-9-1 被组织成各种各样的方法Methods,方法就是某些操作，类似HTTP Method但是和面向对象语言中的方法没有一点关系。AMQP方法被组织成各种类classes,类Class就是方法的集合。比如我们看看exchange class，就有一下操作：</p>

<p>exchange.declare exchange.declare-ok exchange.delete exchange.delete-ok</p>

<p>举例如下： 一个客户端请求broker申明一个新的交换机，使用exchange.declare方法，当然，申明中需要一些参数： 如果成功，broker就会使用exchange.declare-ok方法返回一个成功的标示。 <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e1.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e1.png" alt="amqp-intro-4-e1" width="566" height="160" class="alignnone size-full wp-image-63" /></a> <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e2.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e2.png" alt="amqp-intro-4-e2" width="574" height="161" class="alignnone size-full wp-image-64" /></a></p>

<p>同样道理，对于队列类，也有这么一些方法： <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e3.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e3.png" alt="amqp-intro-4-e3" width="571" height="156" class="alignnone size-full wp-image-65" /></a> <a href="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e4.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-4-e4.png" alt="amqp-intro-4-e4" width="582" height="161" class="alignnone size-full wp-image-66" /></a></p>

<h3>7.1 Connections</h3>

<p>AMQP的连接是长期的，AMQP是一个应用层，使用TCP来完成可靠的消息传递。AMQP的连接使用了认证并且可以使用TLS等加密协议。当一个应用不再需要与AMQP broker连接的时候，他需要友好的断开连接。</p>

<h3>7.2 Channels</h3>

<p>一些应用程序需要与AMQP broker建立多个连接，但是，同时保持多个TCP连接会消耗大量资源。AMQP 0-9-1提出了Channels的概念，Channels可以被认为是<code>在一个TCP连接中多个轻量级的连接</code>。</p>

<p>对于多线程/进程应用，很常见的做法就是一个线程/进程打开一个channel，并且channel之间不共享。</p>

<p>一个channel上的通信与另外一个channel间的通信时完全独立的，所以每个AMQP方法都会携带一个channel号，通过channel号，应用就知道这个方法是出于哪个channel上的。</p>

<h2>7.3 Virtual Hosts</h2>

<p>一个AMQP broler可以产生多个独立的"环境"，这就是vhost的概念。就类似于apache等的vhost一样，AMQP客户可以通过协商选择与哪个vhost进行连接。</p>

<h2>参考资料:</h2>

<p><a href="http://www.rabbitmq.com/tutorials/amqp-concepts.html">http://www.rabbitmq.com/tutorials/amqp-concepts.html</a> <a href="http://langyu.iteye.com/blog/759663/">http://langyu.iteye.com/blog/759663/</a> <a href="http://pythoner.net/wiki/110/">http://pythoner.net/wiki/110/</a> <a href="http://blog.csdn.net/zhangxinrun/article/details/6546479">http://blog.csdn.net/zhangxinrun/article/details/6546479</a> <a href="http://sunjun041640.blog.163.com/blog/static/25626832201032990829/">http://sunjun041640.blog.163.com/blog/static/25626832201032990829/</a> <a href="http://www.oschina.net/question/12_9192">http://www.oschina.net/question/12_9192</a> book:RabbitMQ in Action</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2013-02-28 19:58:38</wp:post_date>
		<wp:post_date_gmt>2013-02-28 11:58:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduce-to-amqp-rabbitmq</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="amqp"><![CDATA[amqp]]></category>
		<category domain="post_tag" nicename="rabbitmq"><![CDATA[rabbitmq]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[single]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[amqp,rabbitmq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[AMQP&RabbitMQ协议及模型入门介绍
主要介绍了AMQP中的相关概念原理，并针对RabbitMQ进行了一些介绍，以便读者能很好的了解AMQP，同时，也为熟悉RabbitMQ开发做了基础储备。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[AMQP&RabbitMQ协议及模型入门介绍]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CGI/FastCGI学习及实践-1-概念</title>
		<link>http://blog.wachang.net/2013/03/cgi-fastcgi-study-1/</link>
		<pubDate>Fri, 01 Mar 2013 08:40:07 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>本文主要罗列了CGI,FASTCGI,PHP-CGI,Spawn-FCGI,PHP-FPM的一些概念，后续做了一些相应的上机演示，主要是以php为例子说明，顺带提到了nginx中PHP环境的构建问题。</p>
</blockquote>

<h2>1 CGI</h2>

<p>CGI全称是“公共网关接口”(Common Gateway Interface)，HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。如php,perl,tcl等。<code>CGI是一种模型规范</code>，然后我们可以编写一个CGI程序来实现CGI模型中定义的功能。</p>

<p>最常见的例子，服务器S上有一个Web服务W，这个服务W是用php写的，客户C请求服务W，S拿到请求以后就需要执行服务W中的代码，这个时候CGI程序就调用服务W的程序，得到结果后返回给服务器S，S再封装返回信息返回给客户C,或者说CGI直接把结果返回给客户C。</p>

<p>所以CGI你可以认识是一个程序，得到一个请求以后就开启一个线程用来执行php/python/asp脚本用，得到结果后返回给服务器S的程序。</p>

<p>传统CGI接口方式的主要缺点是性能很差，因为每次HTTP服务器遇到动态程序时都需要重新启动脚本解析器来执行解析，然后结果被返回给HTTP服务器。这在处理高并发访问时，几乎是不可用的。另外传统的CGI接口方式安全性也很差，现在已经很少被使用了。</p>

<h2>2 FastCGI</h2>

<p>FastCGI是从CGI发展改进而来的,FastCGI是一个可伸缩地、高速地在HTTP server和动态脚本语言间通信的接口。多数流行的HTTP server都支持FastCGI，包括Apache、Nginx和lighttpd等，同时，FastCGI也被许多脚本语言所支持。</p>

<p>FastCGI接口方式采用C/S结构，可以将HTTP服务器和脚本解析服务器分开，同时在脚本解析服务器上启动一个或者多个脚本解析守护进程。当HTTP服务器每次遇到动态程序时，可以将其直接交付给FastCGI进程来执行，然后将得到的结果返回给浏览器。这种方式可以让HTTP服务器专一地处理静态请求或者将动态脚本服务器的结果返回给客户端，这在很大程度上提高了整个应用系统的性能。</p>

<p>更具体来讲，之前的CGI是遇到动态语言就启动一下CGI进程，而FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次。所以说，<code>fasc-cgi也更像是一种模型规范</code>。</p>

<h2>3 Cgi/Fast-cgi工作原理</h2>

<p>我们以php文件举例，原理同样适合python,asp等。</p>

<h3>3.1 CGI模式下php-cgi</h3>

<p>当请求一个php页面，比如index.php以后，服务器得到请求，这是一个php脚本，服务器看不懂，于是他就启动一个程序php-cgi程序，这个程序就是一个php语言的解释器，类推就还有(python-cgi等等)，这个php-cgi就执行index.php中的代码，得到结构以后返回给客户或者先给服务器再由服务器传递给客户，然后这个php-cgi程序就退出。</p>

<p>所以，php-cgi就是一个程序，用来解释php的。可以如下安装：</p>

<pre><code>apt-get install php-cgi
</code></pre>

<h3>3.2 Fast-CGI模式</h3>

<p>因为fast-cgi模式就是一个进程不退出，有请求到来时就产生或者调用一个新的进程处理，处理完了相应的处理程序就关闭，而fast-cgi程序又继续等待。<code>所以fast-cgi程序更像是一个管理器，用来管理cgi进程的。</code>结合3.1中所讲，更详细的解释是：</p>

<ul>
<li>fast-cgi管理进程初始化，启动多个cgi解释进程，比如php环境下就启动多个php-cgi进程。然后就等待服务器的连接。可以使用TCP或者socket方式连接（这是与服务器的连接）。</li>
<li>当相应的请求到达web服务器的时候，服务器发送到fast-cgi管理程序，fast-cgi管理程序就激活一个cgi进程然后把相关的环境变量（CGI环境变量）和参数发送给这个cgi进程，php中就会发送到php-cgi。</li>
<li>cgi进程一般都是一个动态语言解释器，所以他执行，php中php-cgi就执行代码，执行完成以后结果返回给fast-cgi，fast-cgi再递交给服务器或者直接给用户，而此时cgi进程就应该退出或者休眠了，在php中，php-cgi此时就关闭了。</li>
</ul>

<h2>4 总结</h2>

<p>从上面可以总结如下：</p>

<ul>
<li>CGI就是一个解释动态语言的程序，解释php的一般是php-cgi</li>
<li>fast-cgi就是一个管理CGI的程序，php中环境有php-fpm，spwan-fcgi等。</li>
</ul>

<p>但是，php-cgi虽然我们一般认为是一个cgi程序，其实他也是一个fast-cgi程序，通过一些配置也可以完成fast-cgi的功能。具体的实际，我们下一节中说明。</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2013-03-01 16:40:07</wp:post_date>
		<wp:post_date_gmt>2013-03-01 08:40:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cgi-fastcgi-study-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cgi"><![CDATA[cgi]]></category>
		<category domain="post_tag" nicename="fastcgi"><![CDATA[fastcgi]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="php-cgi"><![CDATA[php-cgi]]></category>
		<category domain="post_tag" nicename="php-fpm"><![CDATA[php-fpm]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[cgi-fastcgi-stud-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[cgi,fastcgi,nginx,php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[本文主要罗列了CGI,FASTCGI,PHP-CGI,Spawn-FCGI,PHP-FPM的一些概念，后续做了一些相应的上机演示，主要是以php为例子说明，顺带提到了nginx中PHP环境的构建问题。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[CGI/FastCGI学习及实践-(1)-概念]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nginx+PHP环境上传文件配置 </title>
		<link>http://blog.wachang.net/2013/03/nginx-php-configure-fileupload/</link>
		<pubDate>Fri, 01 Mar 2013 09:07:21 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=78</guid>
		<description></description>
		<content:encoded><![CDATA[<p>因为实验室环境需要提高上传文件大小限制，做个记录，如何在Nginx+PHP环境中配置文件上传相关的内容。</p>

<h2>PHP配置:</h2>

<pre><code>root@kb310-node10:/etc/php5# ls
cgi  cli  conf.d  fpm
</code></pre>

<p>根据使用的具体方式，更改相应文件夹下<code>php.ini</code>文件中的选项：</p>

<pre><code>1 max_execution_time
</code></pre>

<p>变量max&#95;execution&#95;time设置了在强制终止脚本前PHP等待脚本执行完毕的时间，此时间以秒计算。当脚本进入了一个无限循环状态 时此变量非常有用。然而，当存在一个需要很长时间完成的合法活动时（例如上传大型文件），这项功能也会导致操作失败。在这样的情况下必须考虑将此变量值增 加，以避免PHP在脚本正在执行某些重要过程的时候将脚本关闭。允许大文件上传就设置大一点。</p>

<pre><code>2 file_uploads = on
</code></pre>

<p>是否允许文件上传。</p>

<pre><code>3 upload_max_filesize =2M
</code></pre>

<p>允许上传文件大小</p>

<pre><code>4 post_max_size
</code></pre>

<p>同表单提交相关的一个变量是post&#95;max&#95;size，它将控制在采用POST方法进行一次表单提交中PHP所能够接收的最大数据量。需要将默认的8 MB改得更大。相反，应当适当将其降到更为实际的数值。但如果希望使用PHP文件上传功能，则需要将此值改为比upload&#95;max&#95;filesize还要大。</p>

<pre><code>5 max_input_time
</code></pre>

<p>此变量可以以秒为单位对通过POST、GET以及PUT方式接收数据时间进行限制。如果应用程序所运行环境处在低速链路上，则需要增加此值以适应接收数据所需的更多时间.</p>

<pre><code>6 memory_limit =10M
</code></pre>

<p>为了避免正在运行的脚本大量使用系统可用内存，PHP允许定义内存使用限额。通过memory&#95;limit变量来指定单个脚本程序可以使用的最大内存容量，变量memory&#95;limit的值(不要超出服务器内寸最大值)</p>

<h2>Nginx配置</h2>

<p>貌似不需要进行设置。</p>

<h2>参考资料：</h2>

<p><a href="http://bbs.php100.com/read-htm-tid-297084.html">http://bbs.php100.com/read-htm-tid-297084.html</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2013-03-01 17:07:21</wp:post_date>
		<wp:post_date_gmt>2013-03-01 09:07:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginx-php-configure-fileupload</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[nginx-php-configure-fileuploa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[php,upload]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[因为实验室环境需要提高上传文件大小限制，做个记录，如何在Nginx+PHP环境中配置文件上传相关的内容。涉及配置:
max_execution_time,file_uploads,upload_max_filesize 
post_max_size,max_input_time等
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Nginx+PHP环境上传文件配置 ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CGI/FastCGI学习及实践-2-实践</title>
		<link>http://blog.wachang.net/2013/03/cgi-fastcgi-study-2/</link>
		<pubDate>Sat, 02 Mar 2013 12:40:23 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在上一节中，将到了Fastcgi中的一些概念，这一节就实例展示下。以php环境为例：</p>

<p>从上节中，我们明白了，php-cgi就是一个php的解释器，当服务器接收到一个php文件的时候，就会连接Fastcgi管理程序，连接的方式可以通过TCP连接（fastcgi管理程序监听一个端口）或者unix sock（通过文件读写的方式交互）两种方式，这个管理程序会执行php-cgi这个php解释器，从而得到结果。而这个fastcgi管理程序，就有php-fpm以及spawn-fcgi两个。</p>

<!--more-->

<h2>Php-cgi</h2>

<p>实际上，php-cgi也可以作为一个fast-cgi管理程序，有如下参数：</p>

<pre><code> sudo -u www-data PHP_FCGI_CHILDREN=5 PHP_FCGI_MAX_REQUESTS=125 /usr/bin/php-cgi -q -b 127.0.0.1:9000 &amp;
</code></pre>

<p>以上就表示启动了5个php-cgi进程，监听地址127.0.0.1:9000，服务器需要把php请求发到这个地址上。此时可以查看进程：</p>

<pre><code>root@kb310-node10:~# ps -e|grep php-cgi
3527 ?        00:00:00 php-cgi
3529 ?        00:00:00 php-cgi
3530 ?        00:00:00 php-cgi
3531 ?        00:00:00 php-cgi
3532 ?        00:00:00 php-cgi
3533 ?        00:00:00 php-cgi
</code></pre>

<p>而相应的nginx关于php的配置就为：</p>

<pre><code>location ~ .php$ 
    { 
      fastcgi_pass 127.0.0.1:9000; 
      fastcgi_index index.php; 
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; 
      include fastcgi_params; 
    }
</code></pre>

<p>php-cgi的缺点：</p>

<ul>
<li>php-cgi变更php.ini配置后需重启php-cgi才能让新的php-ini生效，不可以平滑重启</li>
<li>直接杀死php-cgi进程,php就不能运行了。(PHP-FPM和Spawn-FCGI就没有这个问题,守护进程会平滑从新生成新的子进程。）</li>
</ul>

<h2>Php-FPM http://php-fpm.org/</h2>

<p>php-fpm作为一个fasc-cgi管理程序，在CPU和内存方面的控制都比较好,用他来管理php-cgi，有很高的稳定性，如下安装：</p>

<pre><code>apt-get install php5-fpm
</code></pre>

<p>然后在<code>/etc/php5/fpm</code>中进行配置，php-fpm.conf配置php-fpm的基本信息，这里可以更改<code>采用TCP或者UNIX SOCK</code>以及监视进程数的多少，<code>php.ini</code>是更改php配置，<code>pool.d</code>里面的东西是更改FPM的线程管理机制，一般用epoll，性能好。我自己采用的是UNIX SOCK监听：</p>

<pre><code>##in php-fpm.ini
[global]
; Pid file
; Note: the default prefix is /var
; Default Value: none
;pid = run/php-fpm.pid
pid = /var/run/php5-fpm.pid
</code></pre>

<p>启动并查看服务：</p>

<pre><code>service php5-fpm restart
root@kb310-node10:/etc/php5/fpm# ps -e|grep php
1738 ?        00:00:01 php5-fpm
1739 ?        00:00:28 php5-fpm
1740 ?        00:00:31 php5-fpm
1741 ?        00:00:32 php5-fpm
</code></pre>

<p>相应nginx中就需要把<code>fastcgi_pass</code>参数更改为：</p>

<pre><code>fastcgi_pass    unix:/var/run/php5-fpm.sock;
</code></pre>

<p>更多使用说明：</p>

<pre><code>service php5-fpm {start|stop|quit|restart|reload|logrotate}
--start 启动php的fastcgi进程
--stop 强制终止php的fastcgi进程
--quit 平滑终止php的fastcgi进程
--restart 重启php的fastcgi进程
--reload 重新平滑加载php的php.ini
--logrotate 重新启用log文件
</code></pre>

<h2>Spawn-fcgi http://redmine.lighttpd.net/projects/spawn-fcgi</h2>

<p>和PHP-FPM功能一样，要问他和php-fpm有什么区别，请看<a href="http://php-fpm.org/about/">http://php-fpm.org/about/</a>，使用上：</p>

<pre><code>spawn-fcgi -a 127.0.0.1 -p 9000 -C 10 -u www-data -f /usr/bin/php-cgi
-f 指定调用FastCGI的进程的执行程序位置，根据系统上所装的PHP的情况具体设置
-a 绑定到地址addr
-p 绑定到端口port
-s 绑定到unix socket的路径path
-C 指定产生的FastCGI的进程数，默认为5(仅用于PHP)
-P 指定产生的进程的PID文件路径
-u和-g FastCGI使用什么身份(-u 用户 -g 用户组)运行，Ubuntu下可以使用www-data，其他的根据情况配置，如nobody、apache等
</code></pre>

<h2>参考文章：</h2>

<p><a href="http://www.fastcgi.com/drupal/node/2">FAST-CGI主页</a></p>

<p><a href="http://www.mike.org.cn/articles/what-is-cgi-fastcgi-php-fpm-spawn-fcgi/">http://www.mike.org.cn/articles/what-is-cgi-fastcgi-php-fpm-spawn-fcgi/</a></p>

<p><a href="http://www.myhack58.com/Article/sort099/sort0102/2012/33364.htm">http://www.myhack58.com/Article/sort099/sort0102/2012/33364.htm</a></p>

<p><a href="http://wenku.baidu.com/view/1215375e3b3567ec102d8a67.html">http://wenku.baidu.com/view/1215375e3b3567ec102d8a67.html</a></p>

<p><a href="http://www.ayuelee.cn/fastcgi-spawn-fcgi-init-script.html">http://www.ayuelee.cn/fastcgi-spawn-fcgi-init-script.html</a></p>

<p><a href="http://hi.baidu.com/winsyk/item/7958e1313dbccdbd633aff8e">http://hi.baidu.com/winsyk/item/7958e1313dbccdbd633aff8e</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2013-03-02 20:40:23</wp:post_date>
		<wp:post_date_gmt>2013-03-02 12:40:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cgi-fastcgi-study-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fastcgi"><![CDATA[fastcgi]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="php-cgi"><![CDATA[php-cgi]]></category>
		<category domain="post_tag" nicename="php-fpm"><![CDATA[php-fpm]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[php,fastcgi,php-fpm,php-cgi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[主要讲解了fastcgi中spawn-fcgi，php-fpm，php-cgi中一些使用方法，通过php环境中具体例子更好的阐述了cgi，fastcgi的相关概念。顺便归纳了以上软件的使用方法。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[CGI/FastCGI学习及实践-2-实践]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_disable</wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenVPN配置LDAP认证</title>
		<link>http://blog.wachang.net/2013/03/openvpn-configure-ldap/</link>
		<pubDate>Mon, 04 Mar 2013 10:34:07 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=90</guid>
		<description></description>
		<content:encoded><![CDATA[<p>原来这个不是OpenVPN官方自带的内容，还要自己折腾一下啊，找了些资料，这里提供两种方案，总结如下：</p>

<h2>openvpn-auth-ldap</h2>

<p><a href="https://code.google.com/p/openvpn-auth-ldap/">OpenVPN-AUTH-LDAP</a>这是最常见的方案，不过现在一般Ubuntu现在都已经有编译好的包了，所以不用进行复杂的源码编译了。</p>

<pre><code>apt-get install openvpn-auth-ldap
</code></pre>

<p>然后，先是配置LDAP认证相关内容：</p>

<pre><code>mkdir /etc/openvpn/auth
cp /usr/share/doc/openvpn-auth-ldap/examples/auth-ldap.conf /etc/openvpn/auth
</code></pre>

<p><!--more-->
编辑文件<code>/etc/openvpn/auth/auth-ldap.conf</code>:</p>

<pre><code>&lt;LDAP&gt;
# LDAP server URL
URL     ldap://X.X.X.X

# Bind DN (If your LDAP server doesn't support anonymous binds)
# BindDN        uid=Manager,ou=People,dc=example,dc=com

# Bind Password
# Password  SecretPassword

# Network timeout (in seconds)
Timeout     15

# Enable Start TLS
TLSEnable   no ##这里要注意

# Follow LDAP Referrals (anonymously)
FollowReferrals yes

# TLS CA Certificate File
TLSCACertFile   /usr/local/etc/ssl/ca.pem

# TLS CA Certificate Directory
TLSCACertDir    /etc/ssl/certs

# Client Certificate and key
# If TLS client authentication is required
TLSCertFile /usr/local/etc/ssl/client-cert.pem
TLSKeyFile  /usr/local/etc/ssl/client-key.pem

# Cipher Suite
# The defaults are usually fine here
# TLSCipherSuite    ALL:!ADH:@STRENGTH
&lt;/LDAP&gt;

&lt;Authorization&gt;
# Base DN
BaseDN      "ou=People,dc=oinlab"

# User Search Filter
SearchFilter    "(uid=%u)" ##这里要注意

# Require Group Membership
RequireGroup    false ##是否开启组验证

# Add non-group members to a PF table (disabled)
#PFTable    ips_vpn_users

&lt;Group&gt;
    BaseDN      "ou=People,dc=oinlab"
    SearchFilter    "(|(cn=developers)(cn=artists))"
    MemberAttribute uniqueMember
    # Add group members to a PF table (disabled)
    #PFTable    ips_vpn_eng
&lt;/Group&gt;
&lt;/Authorization&gt;
</code></pre>

<p>完了以后在配置OpenVPN中<code>server.conf</code>文件，加入如下：</p>

<pre><code>plugin /usr/lib/openvpn/openvpn-auth-ldap.so /etc/openvpn/auth/auth-ldap.conf
client-cert-not-required ##有了LDAP就不需要证书认证了嘛
</code></pre>

<p>最后就是配置一下客户端了：</p>

<p>客户端的配置简单，去掉<code>cert xxx.crt</code>以及<code>key xxx.key</code>部分，再加上<code>auth-user-pass</code>就OK。如下就是一个简单的例子：</p>

<pre><code>client
dev tun
proto udp
remote X.X.X.X 1194
resolv-retry infinite
nobind
user nobody
group nobody
persist-key
persist-tun
ca ca.crt
;cert wangchang.crt
;key wangchang.key
comp-lzo
verb 3
auth-user-pass
</code></pre>

<p>参考资料(需要飞过Wall)：</p>

<p><a href="http://cheaster.blogspot.com/2009/11/openvpn-auth-over-ldap.html">http://cheaster.blogspot.com/2009/11/openvpn-auth-over-ldap.html</a></p>

<p><a href="http://www.howtoforge.com/setting-up-an-openvpn-server-with-authentication-against-openldap-on-ubuntu-10.04-lts">http://www.howtoforge.com/setting-up-an-openvpn-server-with-authentication-against-openldap-on-ubuntu-10.04-lts</a></p>

<h2>脚本方式</h2>

<p>有人就是把插件的功能用一个脚本来实现，相对来说，配置没那么复杂，我没测试过，应该可行。下附链接：</p>

<p><a href="http://down.51cto.com/data/573688">CSDN上的一个下载</a></p>

<p><a href="http://redmine.debuntu.org/projects/openvpn-ldap-auth/wiki">http://redmine.debuntu.org/projects/openvpn-ldap-auth/wiki</a></p>

<p><a href="http://backreference.org/2012/09/14/openvpn-ldap-authentication/">http://backreference.org/2012/09/14/openvpn-ldap-authentication/</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2013-03-04 18:34:07</wp:post_date>
		<wp:post_date_gmt>2013-03-04 10:34:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openvpn-configure-ldap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ldap"><![CDATA[ldap]]></category>
		<category domain="post_tag" nicename="openvpn"><![CDATA[openvpn]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_disable</wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GRE通用路由封装协议学习笔记</title>
		<link>http://blog.wachang.net/2013/03/gre-study-note/</link>
		<pubDate>Tue, 05 Mar 2013 06:59:29 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1 背景</h2>

<p>一种技术（协议）或者策略的两个或多个子网穿过另一种技术（协议）或者策略的网络实现互联，称之为overlay topology，这一技术是电信技术的永恒主题之一。</p>

<p>电信技术在发展，多种网络技术并存，一种技术的网络孤岛可能需要穿过另一种技术的网络实现互联，这种情况如果发生在高层协议的PDU封装于低层协议PDU中时通常称之为复用，特别地三层PDU穿过二层网络地技术称为租用链路或虚电路；而如果穿越发生在一种协议PDU封装在同一层协议的PDU中，或者封装在高层协议的PDU中时，人们通常称之为隧道。</p>

<p>隧道提供了一种某一特定网络技术的PDU穿过不具备该技术转发能力的网络的手段，如组播数据包穿过不支持组播的网络；另一种情况是有时因为管理策略的原因，一个管理者（策略）的子网不能通过和另一个管理者（策略）的网络互联而连接，而是要穿过另一个管理者（策略）的网络实现连接，这就是所谓的VPN（Virtual Private Networks），不管是L2 VPN还是L3 VPN都需要利用隧道技术实现。因此隧道某种意义上可以概括为穿越不同的网络的技术，不同既可以是技术方面的，也可以是管理策略方面的。 隧道可以作为一个虚拟接口来实现。隧道接口并不指定特定的“乘客”或“传输”协议连接，而是一种结构，可以实现任何标准点到点封装的服务。由于隧道是点到点连接，因此对每个连接必须配置一个单独的隧道。</p>

<p>GRE是一种应用较为广泛的一种网络层协议PDU封装于任一种网络层协议PDU中的技术，经常被用来构造GRE隧道穿越各种三层网络，并得到了大多数电信设备厂商的支持。</p>

<!--more-->

<h2>2 GRE</h2>

<h3>2.1 简介</h3>

<p>GRE(通用路由协议封装）是由Cisco和Net-smiths等公司于1994年提交给IETF的，标号为RFC1701和RFC1702。目前有多数厂商的网络设备均支持GRE隧道协议。GRE 规定了如何用一种网络协议去封装另一种网络协议的方法。GRE的隧道由两端的源IP地址和目的IP地址来定义，允许用户使用IP包封装IP、IPX、 AppleTalk包，并支持全部的路由协议（如RIP2、OSPF等）。通过GRE，用户可以利用公共IP网络连接IPX网络、AppleTalk网 络，还可以使用保留地址进行网络互连，或者对公网隐藏企业网的IP地址。总结来说：</p>

<ul>
<li>GRE是三层协议，用一种协议来封装另一种协议，使用了隧道tunnel技术</li>
<li>隧道是虚拟的点对点连接，所以GRE的使用过程中肯定会出现一个虚拟的隧道接口</li>
</ul>

<h3>2.2 例子</h3>

<p>GRE进行IP封装：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/gre-encap-1.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/gre-encap-1-300x176.png" alt="gre-encap-1" width="300" height="176" class="aligncenter size-medium wp-image-94" /></a></p>

<p>GRE解封装</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/gre-decap-1.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/gre-decap-1-300x160.png" alt="gre-decap-1" width="300" height="160" class="aligncenter size-medium wp-image-95" /></a></p>

<p>上面注意封装后新的<code>协议号是47</code>，这样对端就能发觉这是一个GRE报文，接着递交给GRE相关模块进行解封。GRE报文格式如下：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/GRE-format.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/GRE-format-300x170.png" alt="GRE-format" width="300" height="170" class="aligncenter size-medium wp-image-96" /></a></p>

<p>GRE在包头中包含了协议类型-47，这用于标明乘客协议的类型；校验和包括了GRE的包头和完整的乘客协议与数据；密钥用于接收端验证接收的数据；序列号用于接收端数据包的排序和差错控制；路由用于本数据包的路由。</p>

<h3>2.3 应用</h3>

<p>下面这个例子就很好的说明了GRE的使用。</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/gre-example.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/gre-example-300x79.png" alt="gre-example" width="300" height="79" class="aligncenter size-medium wp-image-97" /></a></p>

<p>如果，在路由器AB之间（中间隔着其他网络）我想使用GRE，第一步需要配置GER的隧道接口，指明源目地址,这一步<code>需要在隧道的两段都进行配置</code>：</p>

<pre><code>##路由器A
interface T0
ip address 100.1.1.1 255.255.255.0
tunnel source 1.1.1.1
tunnel dst 1.1.1.2
##路由器B
interface T0
ip address 100.1.1.2 255.255.255.0
tunnel source 1.1.1.2
tunnel dst 1.1.1.1 （注意是反向的，一个隧道是双向的）
</code></pre>

<p>下面我们来解释以上配置的作用:</p>

<ul>
<li>当A上的LO接口的数据（10.1.1.1）希望走GRE隧道到达B上L0接口(20.1.1.1)</li>
<li>此时在路由A上指定这种数据包走网关是A上T0的地址100.1.1.1（走这里才会进行GRE封装，也就是为什么GRE需要设置两段隧道接口的地址！）</li>
<li>随后，这个数据包进行GRE封装，封装完成以后，变成一个新包，源地址是1.1.1.1目的地址是1.1.1.2(这就是GRE中设置隧道源目地址的作用，因为数据包肯定是从实际接口发出的，所以这里需要指明隧道两端的实际接口)</li>
<li>数据包到达路由器B的1.1.1.2口，显示<code>src=1.1.1.1</code>,<code>dst=1.1.1.2</code>，<code>协议号47</code>于是B知道了，这个是GRE报文，然后交给GRE模块处理，GRE模块解封GRE头，得到原来的信息，源地址10.1.1.1目的地址20.1.1.1，交给协议栈处理，作用到达应用处。</li>
</ul>

<p>最后是路由器A上数据包走向的一个截图，可以参考一下:</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/gre-example-2.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/gre-example-2-300x178.png" alt="gre-example-2" width="300" height="178" class="aligncenter size-medium wp-image-98" /></a></p>

<h2>3 参考资料</h2>

<p><a href="http://blog.sina.com.cn/s/blog_4fad46a801015wto.html">http://blog.sina.com.cn/s/blog_4fad46a801015wto.html</a></p>

<p><a href="http://wenku.baidu.com/view/b88e564ff7ec4afe04a1df4b.html">http://wenku.baidu.com/view/b88e564ff7ec4afe04a1df4b.html</a></p>

<p><a href="http://wenku.baidu.com/view/699d9749cf84b9d528ea7a82.html">http://wenku.baidu.com/view/699d9749cf84b9d528ea7a82.html</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2013-03-05 14:59:29</wp:post_date>
		<wp:post_date_gmt>2013-03-05 06:59:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gre-study-note</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gre"><![CDATA[GRE]]></category>
		<category domain="post_tag" nicename="tunnel"><![CDATA[tunnel]]></category>
		<category domain="category" nicename="%e5%8d%8f%e8%ae%ae%e5%ad%a6%e4%b9%a0"><![CDATA[协议学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[gre,tunnel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[GRE是一种应用较为广泛的一种网络层协议PDU封装于任一种网络层协议PDU中的技术，经常被用来构造GRE隧道穿越各种三层网络，并得到了大多数电信设备厂商的支持。本文是我自己的GRE通用路由封装学习笔记，详细介绍了网上的几个例子，应该能对GRE有一个大致的了解。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[GRE通用路由封装协议学习笔记]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Iptables使用参考手册(一)</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-1/</link>
		<pubDate>Thu, 07 Mar 2013 17:13:18 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[<p>主要是自己的学习笔记以及网上资料的参考，按照自己的口味总结，以后稍微参考一下就能熟练上手，本系列暂定写4章：</p>

<p>第一章：<a href="http://blog.wachang.net/2013/03/iptables-usage-ref-1/">流程介绍</a></p>

<p>第二章：如何使用</p>

<p>第三章：深入理解</p>

<p>第四章：高级用法</p>

<h2>1 几句话介绍iptables</h2>

<p>Linux内核中有一个联网子系统netfilter，提供了有状态和无状态的分组过滤，同时提供了NAT和IP伪装服务。<strong>这个系统可以通过工具iptables来进行控制</strong>。</p>

<!--more-->

<h2>2 规则，链，表</h2>

<p>既然是用来处理过滤数据包神马的，那么最基本的肯定就是规则了，一个规则就定义了对一个满足某些条件的数据包应该肿么做，这是最基本的了。我们又看，对于数据包，最终处理它的是规则，那么处理的时机又可以是进入系统的时候或者出系统的时候，所以我们又提出链，一个链包含了一些规则。最后，那么多的规则，又不好管理，于是又来了一个表，iptables以表的形式来管理规则，而且表这个东西又和应用挂钩，比如与NAT有关的链，规则我就放到一个NAT表中。于是乎，概念就解释完了，下面列出iptables里面的链和表：</p>

<p>iptables里面：</p>

<p><strong>规则：</strong>有很多个，你自己定义。</p>

<p><strong>链：</strong>包含了一些规则，主要有以下的链（主要是根据处理时机划分的）</p>

<ul>
<li>INPUT链：包含处理入站数据包的一些规则</li>
<li>OUTPUT：包含处理出站数据包的一些规则</li>
<li>FORWARD：包含处理转发数据包的一些规则，转发数据包：就是不进入本机应用程序，而是从本机转发出去的包。</li>
<li>POSTROUTING链：在进行路由选择后处理数据包</li>
<li>PREROUTING链：在进行路由选择前处理数据包，无论数据包是否进入代理服务器内部，还是直接转发，都要先进行这条链的匹配。</li>
</ul>

<p><strong>默认的表：</strong></p>

<ul>
<li>raw表：debug测试，确认是否对该数据包进行状态跟踪</li>
<li>mangle表：为数据包设置标记,主要是改变包的TOS,TTL,MARK属性，一般不操作。包含了PREROUTING,POSTROUTING,FORWARD,INPUT,OUTPUT链。</li>
<li>nat表：主要做SNAT,DNAT，MASQUERADE的，包含INPUT OUTPUT PREROUTING POSTROUTING四条链</li>
<li>filer表：对数据包进行过滤，准许什么数据包通过accept，不许什么数据包通过drop，并且这个规则表也是默认的</li>
</ul>

<p>最后补充一点，iptables中，表是唯一的，也就是不存在两个NAT表，而链则不是唯一的，比如NAT表和MANGLE表都有一个INPUT链，他们的INPUT链中的规则是不一样的。而链中的具体规则，也不是唯一的，INPUT链和OUTPUT链中都可以存在一个一样的规则。</p>

<h2>3 数据包流程</h2>

<p>总结一句话概括就是 当数据包到达防火墙时，如果MAC地址符合，就会由内核里相应的驱动程序接收，当数据包经过某个表的某个链时，iptables对比数据包和设定的规则，进行处理，决定是发送给本地的程序，还是转发给其他机子，还是其他的什么。</p>

<p>我们来细细说：</p>

<p>首先看下面这张图：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-workflow.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-workflow-1024x528.jpg" alt="iptables-workflow" width="1024" height="528" class="aligncenter size-large wp-image-113" /></a></p>

<p>然后我们来加深理解：</p>

<p><strong>对于收到的数据包，表是有优先级的哦</strong></p>

<p>raw->mangle->nat(转换)->filter(过滤),每一步的处理根据上图中的优先级顺序来的哦。</p>

<p>规则链间的匹配顺序</p>

<p>　　入站数据：PREROUTING、INPUT</p>

<p>　　出站数据：OUTPUT、POSTROUTING</p>

<p>　　转发数据：PREROUTING、FORWARD、POSTROUTING</p>

<p>按顺序依次进行检查，找到相匹配的规则即停止(LOG策略会有例外)</p>

<p>检测下看懂木有，以下是三个图，请对比上面的流程图理解，会恍然大悟的。</p>

<p><strong>1 以本地为目标（就是我们自己的机子了）的包</strong></p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-1.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-1-1024x192.jpg" alt="iptables-example-1" width="1024" height="192" class="aligncenter size-large wp-image-114" /></a></p>

<p><strong>2 以本地为源的包</strong></p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-2.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-2-1024x179.jpg" alt="iptables-example-2" width="1024" height="179" class="aligncenter size-large wp-image-115" /></a></p>

<p><strong>3 被转发的包</strong></p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-3.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/iptables-example-3-1024x226.jpg" alt="iptables-example-3" width="1024" height="226" class="aligncenter size-large wp-image-116" /></a></p>

<p>最后再来一张差不多的图。</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/tables_traverse.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/tables_traverse.jpg" alt="tables_traverse" width="525" height="585" class="aligncenter size-full wp-image-117" /></a></p>

<p>在第一个路由判断处，不是发往本地的包，我们会发送它穿过 FORWARD链。若包的目的地是本地监听的IP地址，我们就会发送这个包穿过INPUT链，最后到达本地。</p>

<p>值得注意的是，在做NAT的过程中，发往本机的包的目的地址可能会在PREROUTING链里被改变。这个操作发生在第一次路由之前，所以在地址被改变之后，才能对包进行路由。注意，所有的包都会经过上图中的某 一条路径。如果你把一个包DNAT回它原来的网络，这个包会继续走完相应路径上剩下的链，直到它被发送回原来的网络。 这一节就到这里，了解了数据包的流程，下一节我们就讲讲怎么使用iptables了。</p>

<h2>4 参考文章</h2>

<p><a href="http://linux.ccidnet.com/art/737/20060705/596545_1.html">http://linux.ccidnet.com/art/737/20060705/596545_1.html</a></p>

<p><a href="http://man.chinaunix.net/network/iptables-tutorial-cn-1.1.19.html">http://man.chinaunix.net/network/iptables-tutorial-cn-1.1.19.html</a></p>

<p><a href="http://linux.ccidnet.com/pub/html/tech/iptables/index.htm">http://linux.ccidnet.com/pub/html/tech/iptables/index.htm</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2013-03-08 01:13:18</wp:post_date>
		<wp:post_date_gmt>2013-03-07 17:13:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iptables-useage-ref-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iptables"><![CDATA[iptables]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_disable</wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Iptables使用参考手册(二)</title>
		<link>http://blog.wachang.net/2013/03/iptables-useage-ref-2/</link>
		<pubDate>Sat, 09 Mar 2013 15:53:40 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[<p>上一节说到了，iptables的一些基本概念以及工作流程，下面我们来看看iptables具体该如何使用。</p>

<p>本系列文章索引：</p>

<p>第一章：<a href="http://blog.wachang.net/2013/03/iptables-usage-ref-1/">流程介绍</a></p>

<p>第二章：<a href="http://blog.wachang.net/2013/03/iptables-useage-ref-2/">如何使用</a></p>

<p>第三章：深入理解</p>

<p>第四章：高级用法</p>

<h2>1 规则语法：</h2>

<h3>1.1 查看规则</h3>

<pre><code>iptables [-t 表名] &lt;-L&gt; [链名]
</code></pre>

<p>注：不指定表名的话默认查看filter表</p>

<h3>1.2 增加(追加，append)、插入、替换规则</h3>

<pre><code>iptables [-t 表名] &lt;-A(追加) | -I(插入)&gt; | -D(删除) | -R(替换)&gt; &lt;链名&gt; [规则编号] [-i|o 进入或流出网卡名称] [-p 协议类型] [-s 源IP地址|源子网] [--sport 源端口号] [-d 目标ip地址|目标子网] [--dport 目标端口号] &lt;-j 动作(accept|drop|nat等)&gt; 
</code></pre>

<p><!--more-->
注：不指定表名的话默认使用filter表</p>

<p><strong><code>-I</code>插入规则如果不指明规则标号，则在第一条规则前插入（置顶）</strong></p>

<p><strong><code>-R</code>替换规则一定要指明规则编号，替换后不会改变规则顺序。</strong></p>

<p><strong><code>-p</code>可是是ssh、tcp、icmp等,如下几个针对协议的匹配都是OK的</strong></p>

<pre><code>-p icmp --icmp-type 类型
-p --tcp-flags SYN,ACK,FIN,PSH,RST,URG
</code></pre>

<p><strong>关于<code>port</code>，以下都是可以的：</strong></p>

<pre><code>--sport 1000:3000 匹配源端口是 1000-3000 的数据包(含1000、3000)
--dport :3000 匹配目标端口是 3000 以下的数据包(含 3000)
--dport 1000: 匹配目标端口是 1000 以上的数据包(含 1000
--sport 和 --dport 必须配合 -p 参数使用，指定是神马协议
</code></pre>

<p><strong>关于动作，有以下一些动作：</strong></p>

<ul>
<li><p>ACCEPT 将封包放行，进行完此处理动作后，将不再比对其它规则，直接跳往下一个规则链（natostrouting）。</p></li>
<li><p>DROP 丢弃封包不予处理，进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。</p></li>
<li><p>REJECT 拦阻该封包，并传送封包通知对方，可以传送的封包有几个选择：ICMP port-unreachable、ICMP echo-reply 或是 tcp-reset（这个封包会要求对方关闭联机），进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。</p>

<p>iptables -A FORWARD -p TCP --dport 22 -j REJECT --reject-with tcp-reset</p></li>
<li><p>SNAT 改写封包来源 IP 为某特定 IP 或 IP 范围，可以指定 port 对应的范围，进行完此处理动作后，将直接跳往下一个规则（mangleostrouting）。</p>

<p>iptables -t nat -A POSTROUTING -p tcp-o eth0 -j SNAT --to-source 194.236.50.155-194.236.50.160:1024-32000</p></li>
<li><p>DNAT 改写封包目的地 IP 为某特定 IP 或 IP 范围，可以指定 port 对应的范围，进行完此处理动作后，将会直接跳往下一个规炼（filter:input 或 filter:forward）。</p>

<p>iptables -t nat -A PREROUTING -p tcp -d 15.45.23.67 --dport 80 -j DNAT --to-destination 192.168.1.1-192.168.1.10:80-100</p></li>
<li><p>MASQUERADE 改写封包来源 IP 为防火墙 NIC IP，可以指定 port 对应的范围，进行完此处理动作后，直接跳往下一个规则（mangleostrouting）。这个功能与 SNAT 略有不同，当进行 IP 伪装时，不需指定要伪装成哪个 IP，IP 会从网卡直接读，当使用拨接连线时，IP 通常是由 ISP 公司的 DHCP 服务器指派的，这个时候 MASQUERADE 特别有用。</p>

<p>iptables -t nat -A POSTROUTING -p TCP -j MASQUERADE --to-ports 1024-31000</p></li>
<li><p>REDIRECT 将封包重新导向到另一个端口（PNAT），进行完此处理动作后，将会继续比对其它规则。</p>

<p>iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080</p></li>
<li><p>MIRROR 镜射封包，也就是将来源 IP 与目的地 IP 对调后，将封包送回，进行完此处理动作后，将会中断过滤程序。</p></li>
<li><p>QUEUE 中断过滤程序，将封包放入队列，交给其它程序处理。透过自行开发的处理程序，可以进行其它应用，</p></li>
<li><p>MARK 将封包标上某个代号，以便提供作为后续过滤的条件判断依据，进行完此处理动作后，将会继续比对其它规则。</p>

<p>iptables -t mangle -A PREROUTING -p tcp --dport 22 -j MARK --set-mark 2</p></li>
<li><p>RETURN结束在目前规则炼中的过滤程序，返回主规则炼继续过滤，如果把自订规则炼看成是一个子程序，那么这个动作，就相当提早结束子程序并返回到主程序中。</p></li>
<li><p>LOG 将封包相关讯息纪录在 /var/log 中，详细位置请查阅 /etc/syslog.conf 组态档，进行完此处理动作后，将会继续比对其规则。</p>

<p>iptables -A INPUT -p tcp -j LOG --log-prefix "INPUT packets"</p></li>
</ul>

<p>关于动作的使用，继续往下来:)！</p>

<p>然后还有一点，一般我们都会考虑到，当数据包没有规则匹配是应该肿么办，是的，这个时候还有一个默认规则，通常叫做默认策略，<code>当数据包不被任何规则匹配时，会采用默认规则</code></p>

<pre><code>iptables [-t 表名] &lt;-P&gt; &lt;链名&gt; &lt;动作&gt;
</code></pre>

<p>这里动作就不加-j了，因为-j表示匹配到以后执行的动作。</p>

<p>然后，我们再继续一点，当规则很多的时候，我们不可能一条一条的删除呗，所以还有以下：</p>

<pre><code>iptables [-t 表名] [链名] &lt;-F|Z&gt;
</code></pre>

<p>还是一样，不指定表名默认操作filter表，这里Z表示计数器和流量归0，现在我们暂时不管他。关于删除，还得多说一点：</p>

<ul>
<li><p>1 <code>-F 仅仅是清空链中规则，并不影响 -P 设置的默认规则</code></p></li>
<li><p>2 -P(默认策略)设置了 DROP 后，使用 -F 一定要小心，不然你网络就断了。</p></li>
<li><p>3 如果不写链名，默认清空某表里所有链里的所有规则</p></li>
</ul>

<p>iptables的规则在重启后就会失效，所以还需要保存和载入：</p>

<pre><code>iptables-save &gt; /xx/iptables.save
iptables-restore &lt; /xx/iptables.save
</code></pre>

<h2>2 iptables的应用</h2>

<p>iptables的动作设置，其实就属于iptables的应用了。我们来看看：</p>

<h3>2.1 增加安全性</h3>

<pre><code>iptables -P INPUT DROP
iptables -p OUTPUT DROP
</code></pre>

<p>体会一下默认策略的作用，你就懂了。</p>

<h3>2.2 NAT</h3>

<p>做SNAT，允许内部的机器访问外部网络，这需要在出去的时候操作POSTROUTING链，SNAT 支持转换为单 IP，也支持转换到 IP 地址池。</p>

<pre><code>-j SNAT --to IP[-IP][:端口-端口]
iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eht0 -j SNAT --to 1.1.1.1
iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j SNAT --to 1.1.1.1-1.1.1.1
</code></pre>

<p>做DNAT，主要是使外部的流量能够访问到内部的网络，类似DMZ功能，这需要在数据包进入的时候操作PREROUTING链目的地址转换，DNAT 支持转换为单 IP，也支持转换到 IP 地址池</p>

<pre><code>-j DNAT --to IP[-IP][:端口-端口]
iptables -t nat -A PREROUTING -i ppp0 -p tcp --dport 80 -j DNAT --to 192.168.0.1:80
iptables -t nat -A PREROUTING -i ppp0 -p tcp --dport 80 -j DNAT --to 192.168.0.1-192.168.0.10
</code></pre>

<h3>2.3 MASQUERADE</h3>

<p>地址转换，动态源地址转换(动态 IP 的情况下使用)，主要还是NAT上使用</p>

<pre><code>iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE
</code></pre>

<p>将源地址是 192.168.0.0/24 的数据包进行地址伪装,这是一个SNAT。</p>

<h3>2.4 防火墙</h3>

<p>防火墙嘛，主要就是过滤，当然是用到filter表了。</p>

<pre><code>iptables -A INPUT -p tcp --dport 22 -j ACCEPT
iptables -A OUTPUT -p udp --sport 22 -j ACCEPT
</code></pre>

<h3>2.5 转发</h3>

<p>如果机器具有网关的作用，那么就一定要能转发数据包，可以通过FPRWARD控制分组转发到LAN上的哪些地方，比如一个机器，两个网卡，eth0接外部网络，eth1接内部网络，并且网关作用，就要允许eth1上转发</p>

<pre><code>iptables -A FORWARD -i eth1 -j ACCEPT
iptables -A FORWARD -o eth1 -j ACCEPT
</code></pre>

<p>经过以上学习，常用的iptables的功能都差不多了，其实看到这里，也就可以勒，如果你还想玩的炫一点，那就接着看下一篇。</p>

<h2>3 参考资料</h2>

<p><a href="http://man.chinaunix.net/network/iptables-tutorial-cn-1.1.19.html">http://man.chinaunix.net/network/iptables-tutorial-cn-1.1.19.html</a></p>

<p><a href="http://www.lampbo.org/linux-xuexi/linux-advance/iptables-options.html">http://www.lampbo.org/linux-xuexi/linux-advance/iptables-options.html</a></p>

<p><a href="http://tech.anquan365.com/application/other/201201/167224.html">http://tech.anquan365.com/application/other/201201/167224.html</a></p>

<p>推荐<a href="http://www.cnblogs.com/diyunpeng/archive/2012/05/10/2493749.html">http://www.cnblogs.com/diyunpeng/archive/2012/05/10/2493749.html</a></p>

<p>推荐<a href="http://blog.163.com/xychenbaihu@yeah/blog/static/132229655201212705752493/">http://blog.163.com/xychenbaihu@yeah/blog/static/132229655201212705752493/</a></p>

<p>一个实战经验，我没看：<a href="http://blog.sina.com.cn/s/blog_67a6c6f10100k3yx.html">http://blog.sina.com.cn/s/blog_67a6c6f10100k3yx.html</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2013-03-09 23:53:40</wp:post_date>
		<wp:post_date_gmt>2013-03-09 15:53:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iptables-useage-ref-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iptables"><![CDATA[iptables]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[详细解释了iptables的使用iptables [-t 表名] <-A(追加) | -I(插入)> | -D(删除) | -R(替换)> <链名> [规则编号] [-i|o 进入或流出网卡名称] [-p 协议类型] [-s 源IP地址|源子网] [--sport 源端口号] [-d 目标ip地址|目标子网] [--dport 目标端口号] <-j 动作(accept|drop|nat等)> ，并且给出了实际应用的例子。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Iptables使用参考手册(二)]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>也谈OpenvSwitch配置GRE隧道（一）</title>
		<link>http://blog.wachang.net/2013/03/openvswitch-configure-gre-note-1/</link>
		<pubDate>Mon, 11 Mar 2013 13:48:05 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1 OpenvSwitch in Kernel</h2>

<p>从3.3的内核开始，OpenvSwitch（简称OVS）集成到Linux内核中去了，也就是说以后源码安装OVS的时候就不需要编译内核模块了，但是目前内核中的OVS还不支持配置GRE隧道。于是王聪的文章说了在这种情况下如何给OVS配置GRE。</p>

<p>王聪：<a href="http://wangcong.org/blog/archives/2163">在 openvswitch 上配置 GRE tunnel</a></p>

<p>以下是相关的一些笔记：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/openvswitch-gre.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/openvswitch-gre.jpg" alt="openvswitch-gre" width="666" height="409" class="aligncenter size-full wp-image-149" /></a></p>

<blockquote>
  <p>创建一个普通的 GRE tunnel，然后把它添加到 openvswitch bridge 中去就可以了。如下图：</p>
  
  <p>目标是让 HOST1 上面的两个 VM 和 HOST2 上面的两个 VM 通过 GRE tunnel 实现通信，在这个环境中，一个很可能的错误是把 HOST2 上的 uplink，即 eth0 也加入到 openvswitch 的 bridge 中，这是不对的，需要加入仅仅的是 GRE tunnel 设备，即 gre1 （你当然也可以把它命名为其它名字）。</p>
</blockquote>

<!--more-->

<p><code>注意，此时的gre设备不是在OVS中创建的，是在系统中创建的。</code></p>

<p>至于为什么会这样，可以参考我之前的学习笔记，大概的原理就是让VM的数据包的路由通过GRE设备，这样就可以进行GRE封装，封装后的数据源目地址就成了10.16.43.xx，这样再走eth0实际网卡出去，就能到达对端。</p>

<blockquote>
  <p>剩下的一个最重要的问题是，GRE tunnel 是无法回应 ARP 的，因为它是一个 point to point 的设备（ip addr add 192.168.2.1/24 peer 192.168.1.1/24 dev gre1），所以很明显设置了 NOARP。这个问题是这里的关键。因为这个的缘故，即使你在 VM1 上也无法 ping HOST2 上的 gre1。所以这里需要一个技巧，就是要给 bridge 本身配置一个 IP 地址，然后让 bridge 做一个 ARP proxy！</p>
</blockquote>

<p>首先要明白这个环境中为什么需要ARP。首先，<code>OVS与VM连接，VM的VNIC是有一个MAC地址的</code>。其次，这个GRE隧道是OVS和OVS之间的，所以，VM间的通信是二层MAC针的形式，在到达交互的时候MAC帧应该是<code>[dmac][smac][dip][sip][data]</code>这种形式，所以H1的VM ping H2的VM的时候，一定需要先由ARP请求得到VM的MAC地址（实际上是OVS的port的MAC地址）。那么按此推断，此时GRE封装的应该是二层数据。看看最后H2主机（不是VM）的设置：</p>

<pre><code>[root@host2 ~]# ip tunnel show
gre0: gre/ip  remote any  local any  ttl inherit  nopmtudisc
gre1: gre/ip  remote 10.16.43.214  local 10.16.43.215  ttl inherit #首先H2是有一个gre设备

[root@host2 ~]# ip r s
192.168.2.0/24 dev ovsbr0  proto kernel  scope link  src 192.168.2.4
192.168.1.0/24 dev gre1  scope link
##上面一条路由相当重要，后面有解释
192.168.122.0/24 dev virbr0  proto kernel  scope link  src 192.168.122.1
10.16.40.0/21 dev eth0  proto kernel  scope link  src 10.16.43.215
169.254.0.0/16 dev eth0  scope link  metric 1005
default via 10.16.47.254 dev eth0
</code></pre>

<p>首先，VM通信的时候经过OVS，那么到达内核的数据就是二层的了。这个时候路由表示目的地址为192.168.1.0需要做GRE封装，于是这个二层帧被GRE封装，又根据设备gre1的性质，这个数据再三成上被封装为：</p>

<pre><code>[remote_ip:10.16.43.214][local_ip:10.16.43.215][原始L2 DATA]
</code></pre>

<p>这个数据包从路由来看，又是该走eth0出去，于是再包裹一个二层：</p>

<pre><code>[dmac(H1 eth0 MAC)][smac(H2 eth0 MAC)][remote_ip:10.16.43.214][local_ip:10.16.43.215][原始L2 DATA]
</code></pre>

<p>于是数据到达H1了。H1经过解封到达OVS，再到达VM。</p>

<blockquote>
  <p>HOST2 上面的 VM1 只需添加一个路由即可，配置如下：</p>
</blockquote>

<pre><code>[root@localhost ~]# ip r s
192.168.2.0/24 dev eth1  proto kernel  scope link  src 192.168.2.2
192.168.1.0/24 dev eth1  scope link  src 192.168.2.2
[root@localhost ~]# ping 192.168.1.2
PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data.
64 bytes from 192.168.1.2: icmp_seq=1 ttl=62 time=561 ms
64 bytes from 192.168.1.2: icmp_seq=2 ttl=62 time=0.731 ms
</code></pre>

<p>VM上还需要配置路由，这个我不是很懂，再琢磨一下先。</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2013-03-11 21:48:05</wp:post_date>
		<wp:post_date_gmt>2013-03-11 13:48:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openvswitch-configure-gre-note-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gre"><![CDATA[GRE]]></category>
		<category domain="post_tag" nicename="openvswitch"><![CDATA[openvswitch]]></category>
		<category domain="category" nicename="%e5%8d%8f%e8%ae%ae%e5%ad%a6%e4%b9%a0"><![CDATA[协议学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[openvswitch-configure-gre-note]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[gre,tunnel,openvswitch]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[从3.3的内核开始，OpenvSwitch（简称OVS）集成到Linux内核中去了，也就是说以后源码安装OVS的时候就不需要编译内核模块了，但是目前内核中的OVS还不支持配置GRE隧道。于是王聪的文章说了在这种情况下如何给OVS配置GRE。我做了一个简单的总结和注释，以便与理解！]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[也谈OpenvSwitch配置GRE隧道（一）]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://blog.wachang.net/?p=142</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[<p>http://www.longgeek.com/2013/03/11/openstack-grizzly-g3-for-ubuntu-12-04-all-in-one-installation/
http://docs.gridcentric.com/canary/usage.html
https://wiki.openstack.org/wiki/PerformanceMonitoringTools
http://blog.csdn.net/21aspnet/article/details/6729724</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2013-03-12 01:07:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OVS使用</title>
		<link>http://blog.wachang.net/?p=143</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[<p>http://blog.csdn.net/yahohi/article/details/6631934</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2013-03-13 10:35:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenStack Folsom Quantum GRE模式工作流程</title>
		<link>http://blog.wachang.net/?p=145</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[<p>https://wiki.openstack.org/wiki/ConfigureOpenvswitch</p>

<p>https://wiki.openstack.org/wiki/Quantum</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2013-03-13 15:39:27</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>openstack插件概况</title>
		<link>http://blog.wachang.net/?p=147</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[<p>http://www.sebastien-han.fr/blog/2012/09/28/quantum-plugin-comparison/</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2013-03-13 18:08:45</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>隧道技术GRE/PPTP/SSH等学习笔记</title>
		<link>http://blog.wachang.net/2013/03/tunnel-techology-note/</link>
		<pubDate>Wed, 13 Mar 2013 15:18:51 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[<p>又看了王聪大神的两篇文章，感觉对于隧道技术有新的理解了。</p>

<p>文章1：王聪：<a href="http://wangcong.org/blog/archives/1683">各种 tunnel</a></p>

<p>还是罗列一下我的学习笔记：</p>

<blockquote>
  <p>概括地讲，所谓 tunnel 就是把下一层（比如IPv4层）的包封装到上一层（比如 SSH，HTTP）或者同一层（比如IPv6层）的协议中进行传输，从而实现网络之间的穿透。很明显，这种实现有个前提，那就是，发送端和接收端必须各有一个解析这种包的程序或者内核模块才能实现正常通信。</p>
</blockquote>

<p><strong>之前我知道GRE是三层协议，以为就是封装网络层的数据，从这么看的话，不是的，GRE应该是可以封装2层和三层的！！！</strong></p>

<!--more-->

<blockquote>
  <p>内核中可以支持四种隧道：ipip、gre、sit、isatap</p>
  
  <p>ipip 是把 IP 层封装到 IP 层的一个 tunnel，看起来似乎是浪费，实则不然。它的作用其实基本上就相当于一个基于IP层的网桥！我们知道，普通的网桥是基于mac层的，根本不需 IP，而这个 ipip 则是通过两端的路由做一个 tunnel，把两个本来不通的网络通过点对点连接起来。ipip 的源代码在内核 net/ipv4/ipip.c 中可以找到。</p>
  
  <p>sit 和 isatap 都是 IPv6 over IPv4 的 tunnel，它们的源代码在 net/ipv6/sit.c 中。它们之间也不同，和IPv6的地址有关，写在这里恐怕放不下了，故省略。</p>
  
  <p>IPSec 还用到一个叫 L2TP 的 tunnel，在内核源代码 net/l2tp 中，PPTP 是另外一个，在 drivers/net/pptp.c 中实现。</p>
  
  <p>gre 和它类似，但它功能还要更强大一些，还支持广播，它可以取代 ipip。</p>
</blockquote>

<p>王聪的另外一个文章详细讲解了GRE隧道的特点：</p>

<p>王聪：<a href="http://wangcong.org/blog/archives/2149">深入理解 GRE tunnel</a></p>

<p>也是好文章，直接引用~~~</p>

<p>首先，多数tunnel都是点到点的，也就是说，<strong>是从机器的一端到另外一个机器的一端</strong>，如下图：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/sit_tunnel1.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/sit_tunnel1.jpg" alt="sit_tunnel1" width="794" height="442" class="aligncenter size-full wp-image-152" /></a></p>

<p>除了端点的 host A 和 host B之外，中间经过的任何设备都是看不到里面的 IPv6 的头，对于它们来说，经过 sit 发出的包和其它的 IPv4 的包没有任何区别。</p>

<p>GRE tunnel 却不一样了，它的原理从根本上和 sit，ipip 这样的 tunnel 就不一样。除了外层的 IP 头和内层的 IP 头之间多了一个 GRE 头之外，它最大的不同是，tunnel 不是建立在最终的 host 上，而是在中间的 router 上！换句话说，对于端点 host A 和 host B 来说，该 tunnel 是透明的（对比上面的 sit tunnel）。这是网上很多教程里没有直接告诉你的。理解这一点非常关键，正是因为它这么设计的，所以它才能解决 ipip tunnel 解决不了的问题。所以，经过 GRE tunnel 发送的包（从 host A 发送到 host B）大体过程是这样子的：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/gre_tunnel.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/gre_tunnel.jpg" alt="gre_tunnel" width="847" height="445" class="aligncenter size-full wp-image-154" /></a></p>

<p>我们可以看出，从 host A 发出的包其实就是一个很普通的 IP 包，除了目的地址不直接可达外。该 GRE tunnel 的一端是建立在 router A上，另一段是建立在 router B上，所以添加外部的 IP 头是在 router A 上完成的，而去掉外面的 IP 头是在 router B上完成的，两个端点的 host 上几乎什么都不用做（除了配置路由，把发送到 10.0.2.0 的包路由到 router A）！</p>

<p>这么设计的好处也就很容易看出来了，ipip tunnel 是端对端的，通信也就只能是点对点的，而 GRE tunnel 却可以进行多播。</p>

<p>最后来一张GRE报文格式图：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/gre_header.png"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/gre_header.png" alt="gre_header" width="479" height="119" class="aligncenter size-full wp-image-155" /></a></p>

<h2>参考文章：</h2>

<p><a href="http://www.linuxdocs.org/HOWTOs/Adv-Routing-HOWTO-5.html">http://www.linuxdocs.org/HOWTOs/Adv-Routing-HOWTO-5.html</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2013-03-13 23:18:51</wp:post_date>
		<wp:post_date_gmt>2013-03-13 15:18:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tunnel-techology-note</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gre"><![CDATA[GRE]]></category>
		<category domain="post_tag" nicename="tunnel"><![CDATA[tunnel]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[gre,tunnel]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[概括地讲，所谓 tunnel 就是把下一层（比如IPv4层）的包封装到上一层（比如 SSH，HTTP）或者同一层（比如IPv6层）的协议中进行传输，从而实现网络之间的穿透。很明显，这种实现有个前提，那就是，发送端和接收端必须各有一个解析这种包的程序或者内核模块才能实现正常通信。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[隧道技术GRE/PPTP/SSH等学习笔记]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mirantis-Elastic Hadoop on OpenStack</title>
		<link>http://blog.wachang.net/2013/03/mirantis-elastic-hadoop-on-openstack/</link>
		<pubDate>Tue, 19 Mar 2013 14:28:22 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[<p>今天看到mirantis把hadoop和openstack进行了一个集成，提出了一个EHO系统，从架构上看还是很有意思的。对于我做过OpenStack开发的话，还是蛮有收获。重点是EHO现在的文档做的相当好，就很有参考价值了。</p>

<p>主页：<a href="http://eho.mirantis.com/index.html">http://eho.mirantis.com/index.html</a></p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/EHO-ARCH.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/EHO-ARCH.jpg" alt="EHO ARCH" width="787" height="453" class="aligncenter size-full wp-image-176" /></a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2013-03-19 22:28:22</wp:post_date>
		<wp:post_date_gmt>2013-03-19 14:28:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mirantis-elastic-hadoop-on-openstack</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hadoop"><![CDATA[hadoop]]></category>
		<category domain="category" nicename="openstack"><![CDATA[OpenStack]]></category>
		<category domain="post_tag" nicename="openstack-2"><![CDATA[openstack]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Mirantis-Elastic Hadoop on OpenStack]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[Mirantis-Elastic Hadoop on OpenStack]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>UML Tools For Python</title>
		<link>http://blog.wachang.net/?p=161</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[<p>有时候看代码需要总结，这个类之间的关系很复杂，懒得有手写，就想用一点工具来自动生成。于是就找了找Python的UML工具，至于什么是UML，随便一查就知道了。具体需求正如以下这哥们所说：</p>

<blockquote>
  <p>随着项目进展，类越来越多，原来做总体设计的时候没有想到有这么复杂的情况:(。现在我想画出uml图来反映各个类之间的关系。</p>
</blockquote>

<p>于是找了下，有这么些工具：</p>

<h2>1 Ecplise插件pyuml</h2>

<h2>2 Python UML Tool</h2>

<p>在http://sourceforge.net/projects/pyut/上找到的，版不过版本确实比较老了，最后更新是09年的。</p>

<h2>3 Pynsource</h2>

<p><a href="http://www.andypatterns.com/index.php/products/pynsource/">项目主页</a></p>

<p><a href="https://code.google.com/p/pynsource/downloads/list">下载</a></p>

<p>使用上比较方便，导入python文件后就可以自动生成相应的类关系，特别是支持把关系转换成asic表，这个我就喜欢！</p>

<h2>4 Gaphor</h2>

<p>sourceforge.net/projects/gaphor/</p>

<h2>Dia</h2>

<p>Dia是基于GTK的图形绘制程序，适用于Linux, Unix和Window DIA软件启动界面 s，以 GPL 许可发布。通俗的说，一个10MB量级的免费软件，代替visio基本没问题，被收入了“最好的300款免费软件”。也有些用户认为Dia很多地方不太好用，但无论如何，它是综合性能最高的免费解决方案。</p>

<h2>参考文章</h2>

<p>http://imtx.me/archives/155.html</p>

<p>http://www.cnblogs.com/dkblog/archive/2011/05/06/2039124.html</p>

<p>http://www.blogjava.net/xiaohuzi2008/archive/2012/12/25/393463.html</p>

<p>http://blog.chinaunix.net/uid-20446794-id-1677395.html</p>

<p>http://tgic.me/2010/02/05/%E8%A7%A3%E5%86%B3-gaphor-uml-%E4%B8%8D%E6%94%AF%E6%8C%81%E4%B8%AD%E6%96%87%E7%9A%84%E9%97%AE%E9%A2%98/</p>

<p>https://cacoo.com</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2013-03-15 21:19:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uml-tools-for-python</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>也谈OpenvSwitch配置GRE隧道（二）</title>
		<link>http://blog.wachang.net/2013/03/openvswitch-configure-gre-note-2/</link>
		<pubDate>Tue, 19 Mar 2013 06:48:10 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=165</guid>
		<description></description>
		<content:encoded><![CDATA[<p>OpenvSwitch配置GRE隧道另外一个比较有用的地方就是在OpenFlow环境中通过GRE隧道连接两个Switch，从而实现多个单独OpenFlow网络的互通。这在做实验的环境下还是非常有用的。</p>

<ul>
<li>OpenvSwitch gre隧道配置</li>
</ul>

<p>文章地址：<a href="https://github.com/PeerXu/blog/blob/master/_posts/2013-1-15-open-vswitch-gre-tunnel-configuration.md">https://github.com/PeerXu/blog/blob/master/_posts/2013-1-15-open-vswitch-gre-tunnel-configuration.md</a></p>

<p>本地下载：[wpdm_file id=1]</p>

<!--more-->

<ul>
<li>Open vSwitch的GRE Tunnel配置</li>
</ul>

<p>这个文章同样也是用GRE来连接两个OpenFlow网络，不过讲的更详细一点，原文文档可以点下面的连接下载，做一点笔记~</p>

<p>感觉这个的配置稍微有点复杂啊</p>

<p>文章地址:<a href="http://kimi4ysr.me/?p=251">http://kimi4ysr.me/?p=251</a></p>

<p>本地下载：[wpdm_file id=2]</p>

<p>一点参考文章：</p>

<p><a href="http://networkstatic.net/open-vswitch-gre-tunnel-configuration/">http://networkstatic.net/open-vswitch-gre-tunnel-configuration/</a></p>

<p><a href="http://networkstatic.net/openvswitch-and-gre-tunnel-notes/">http://networkstatic.net/openvswitch-and-gre-tunnel-notes/</a></p>

<p><a href="http://wangcong.org/blog/archives/2238">http://wangcong.org/blog/archives/2238</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2013-03-19 14:48:10</wp:post_date>
		<wp:post_date_gmt>2013-03-19 06:48:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openvswitch-configure-gre-note-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gre"><![CDATA[GRE]]></category>
		<category domain="category" nicename="openflow"><![CDATA[OpenFlow]]></category>
		<category domain="post_tag" nicename="openvswitch"><![CDATA[openvswitch]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[也谈OpenvSwitch配置GRE隧道（二）]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[也谈OpenvSwitch配置GRE隧道（二）]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NVGRE: Network Virtualization using Generic Routing Encapsulation</title>
		<link>http://blog.wachang.net/2013/03/nvgre-network-virtualization-using-generic-routing-encapsulation/</link>
		<pubDate>Tue, 19 Mar 2013 15:25:28 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>本文主要是我学习IETF文档NVGRE: Network Virtualization using Generic Routing Encapsulation的一个笔记。版本是02.文档地址：<a href="http://tools.ietf.org/html/draft-sridharan-virtualization-nvgre-02">http://tools.ietf.org/html/draft-sridharan-virtualization-nvgre-02</a>，文末是文档的本地PDF下载。这个文档主要讲的事如何用GRE协议来实现网络虚拟化。相关的定义就是NVGRE协议。</p>
</blockquote>

<h2>1. Introduction</h2>

<p>传统数据中心的规模很大，因为是在二层，所以在资源动态分配和容量上有局限，于是RSTP（Rapid Spanning Tree Protocol）协议能很好的解决冗余阻塞环路的问题，但是优惠造成网络容量的浪费以及网络超额，于是像TRILL协议等又被提出解决这个问题。</p>

<p>因为使用了VLAN技术来做广播隔离，网络的利用率其实很低。VLAN既作为流量控制的手段，也作为租户之间服务安全的保证，于是2层网络就被切割成许多小的子网，通常一个子网有一个VLAN ID，但是VLAN ID又有4K的限制，数量太少。于是下一代数据中心网络就要考虑到以下问题：</p>

<ul>
<li>逻辑L2 L3网络的扩展 </li>
<li>当各种服务在DC中移动的时候要保护地址信息，或者L2段</li>
<li>提供广播隔离</li>
</ul>

<p>于是，提出了一个NVGRE。</p>

<!--more-->

<h2>3. Network Virtualization using GRE</h2>

<p>网络虚拟化Network Virtualization包括：在实际的L2/L3网络中创建虚拟的L2/L3网络拓扑。那么虚拟拓扑之间的通信，就是通过把虚拟拓扑产生的以太帧封装的实际网络的IP中，（隧道技术），那么，有一些定义：</p>

<p>没一个虚拟L2网络有一个24bit的标示符identifier，叫做Virtual Subnet Identifier (VSID，24bit足够1600万个虚拟subnet同时处在一个管理与上。一个VSID可以认为是一个广播域，有点类似VLAN ID。这个VSID在隧道封装中是可以作为头部信息的。</p>

<p>GRE这个协议是IETF RFC 2784提出的，特点就是<code>可以把任意协议封装到IP上</code>。而NVGRE补充了GRE协议，使得在每个包中药携带一个VSID的信息。</p>

<h3>3.1. NVGRE Endpoint</h3>

<p>NVGRE Endpoint就是在虚拟网络和实际网络之间出入的端点，任意屋里服务器或者网络设备都可以作为NVGRE Endpoint。但是在实际中常见的是<code>作为hypervisor</code>的一部分。endpoint主要功能有以下：</p>

<ul>
<li>封装以太帧到GRE设备/从GRE设备解封出以太帧</li>
<li>可以作为一个虚拟拓扑的网关</li>
</ul>

<p>为了封装以太帧，endpoint需要知道帧中目的地址的位置信息，这个地址可以通过管理层分配，本文档假设位置信息，包括VSID，在NVGRE endpoint是存在的。</p>

<h3>3.2. NVGRE frame format</h3>

<p>RFC 2784 RFC 2890中GRE头部的定义被用来在 NVGRE endpoints间通信。 NVGRE 扩展了头部信息，加入了VSID，GRE中二层包封装的格式如下，注意，从上往下看，就是整个数据的从外到内看：</p>

<p>首先，在网络中实际传输的MAC帧的格式 Outer Ethernet Header:</p>

<pre><code>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                (Outer) Destination MAC Address                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|(Outer)Destination MAC Address |  (Outer)Source MAC Address    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  (Outer) Source MAC Address                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Optional Ethertype=C-Tag 802.1Q| Outer VLAN Tag Information    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre>

<p>其次，剥掉上面一层，则是网络中传输的IP报文的格式：</p>

<p>Outer IPv4 Header:</p>

<pre><code>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version|  IHL  |Type of Service|          Total Length         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Identification        |Flags|      Fragment Offset    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Time to Live | Protocol 0x2F |         Header Checksum       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      (Outer) Source Address                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  (Outer) Destination Address                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre>

<p>剥掉上面一层，则是NVGRE Header：</p>

<pre><code>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0| |1|0| Reserved0       | Ver |   Protocol Type 0x6558        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               Virtual Subnet ID (VSID)        |   Reserved    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre>

<p>剥掉GRE头信息，则是相应的虚拟拓扑的信息，也就是原始需要通信端点的信息 Inner Ethernet Header：</p>

<pre><code>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                (Inner) Destination MAC Address                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|(Inner)Destination MAC Address |  (Inner)Source MAC Address    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  (Inner) Source MAC Address                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Optional Ethertype=C-Tag 802.1Q| PCP |0| VID set to 0          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       Ethertype 0x0800        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre>

<p>最后，才是原始的IP层信息 Inner IPv4 Header:</p>

<pre><code>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Version|  IHL  |Type of Service|          Total Length         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Identification        |Flags|      Fragment Offset    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Time to Live |    Protocol   |         Header Checksum       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Source Address                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Destination Address                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                    Options                    |    Padding    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      Original IP Payload                      |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre>

<p>有一个解释，这个我好好翻译下：</p>

<ul>
<li>The outer Ethernet header：源地址是NVGRE endpoint（一个物理设备或者虚拟的设备）的MAC地址，目的地址是吓一跳指定节点，也是一个NVGRE endpoint节点的MAC地址。VLAN可以让这个帧跨越子网的。</li>
<li>The outer IP header:就是上一层的IP层地址信息。</li>
<li>C (Checksum Present)和S (Sequence Number Present)必须为0</li>
<li>The K bit (Key Present) 32bit，NVGRE用这个key来携带VSID.</li>
</ul>

<p>具体来说32bit的key值，钱24bit用来携带VSID，后8bit用来携带一个FlowID，这个可以用来在VS中进一步划分流。</p>

<ul>
<li><p>GRE头信息中，协议类型0x6558，(transparent Ethernet bridging)</p></li>
<li><p>在GRE中不仅仅能封装IP层，其他层都可以，NVGRE也是一样。</p></li>
</ul>

<h2>4 广播和多播</h2>

<p>传统来说，像GRE这种点到点的tunnel是不能支持多播和广播的，NVGRE提出一个思想，就是为每一个subnet，或者说VSID所表示的虚拟网络指定一个广播和多播地址，从而解决这个问题。</p>

<h3>4.2. Unicast Traffic 这段话很重要</h3>

<p>NVGRE endpoint在GRE中封装2层报文，source PA（packet address）是这个endpoint的地址，而destination PA则是相应的对端endpoint地址。一个endpoint可以有多个地址，就有一个策略来选择是使用哪个地址，经过GRE封装以后，<code>The encapsulated GRE packet is bridged and routed normally by the physical network to the destination.</code>以及<code>On the destination the NVGRE endpoint decapsulates the GRE packet to recover the original Layer-2 frame.</code></p>

<h3>4.3. IP Fragmentation</h3>

<p>在IP中，长的IP报文是有一个分段的，那么NVGRE这种是IP报文进行了一次封装，就最好不要分段，再一下草案中可能会提出解决分段的机制。</p>

<h3>4.4. Address/Policy Management &amp; Routing</h3>

<h3>4.5. Cross-subnet, Cross-premise Communication</h3>

<p>主要是一个VPN gateway，建立一个site-to-site的隧道，注意不是端到端的。从而使得交叉的subnets之间可以通信。如下图：</p>

<p><a href="http://blog.wachang.net/wp-content/uploads/2013/03/nvgre-cross-subnets.jpg"><img src="http://blog.wachang.net/wp-content/uploads/2013/03/nvgre-cross-subnets.jpg" alt="nvgre-cross-subnets" width="633" height="747" class="aligncenter size-full wp-image-178" /></a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2013-03-19 23:25:28</wp:post_date>
		<wp:post_date_gmt>2013-03-19 15:25:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nvgre-network-virtualization-using-generic-routing-encapsulation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gre"><![CDATA[GRE]]></category>
		<category domain="post_tag" nicename="nvgre"><![CDATA[NVGRE]]></category>
		<category domain="category" nicename="%e5%8d%8f%e8%ae%ae%e5%ad%a6%e4%b9%a0"><![CDATA[协议学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[本文主要是我学习IETF文档NVGRE: Network Virtualization using Generic Routing Encapsulation的一个笔记。版本是02.文档地址：，文末是文档的本地PDF下载。这个文档主要讲的事如何用GRE协议来实现网络虚拟化。相关的定义就是NVGRE协议。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[NVGRE: Network Virtualization using Generic Routing Encapsulation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WSGI应用常见的几种写法-基本形式</title>
		<link>http://blog.wachang.net/2013/03/wsgi-application-style-base/</link>
		<pubDate>Tue, 19 Mar 2013 18:34:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>这是转自我Octopress博客的文章，现在我的主力还是放到Wordpress吧，毕竟在WIN下用太geek的工具还是有一些问题</p>
</blockquote>

<p>Python WSGI标准<a href="http://www.python.org/dev/peps/pep-0333/">PEP-0333</a>中说到一个WSGI是一个可调用callable的对象，这包含了一个函数，一个方法，一个类，或者拥有call方法的实例。下面我就对这句话做一个总结，举几个例子。这里的WSGI应用的功能都是返回请求的环境信息environ。</p>

<!--more-->

<h2>1 服务端</h2>

<p>采用简单的WSGI服务器参考实现，如下：</p>

<pre><code>if __name__ == '__main__':
    from wsgiref.simple_server import make_server
    server = make_server('192.168.1.11', 7070, wsgi_application)
    server.serve_forever()
</code></pre>

<h2>2 函数方法</h2>

<p>这是最简单的方法，先调用<code>start_response()</code>处理返回头信息，函数再返回可迭代对象，比如列表或者字符串。</p>

<pre><code>def app1(environ,start_response):
    start_response("200 OK",[("Content-type","text/plain")])
    content = []
    for k,v in environ.iteritems():
        content.append('%s:%s \n' % (k,v))
    return content#返回的列表或者字符串
</code></pre>

<p>相应的服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app1)
</code></pre>

<h2>3 带有call方法的实例</h2>

<p>类定义中实现call方法，WSGI应用是这个类的一个实例。</p>

<pre><code>class app2(object):
    def __init__(self):
       pass
    def __call__(self,environ,start_response):
       start_response("200 OK",[("Content-type","text/plain")])
       content = []
       for k,v in environ.iteritems():
           content.append('%s:%s \n' % (k,v))
       return content#返回的列表或者字符串

application = app2()
</code></pre>

<p>服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, application)
</code></pre>

<h2>4 类class</h2>

<p>用类作为WSGI应用不太一样，调用这个类时会产生一个类的实例，这个实例随后会需要<strong>iter</strong>迭代返回值。</p>

<pre><code>class app3(object):
    def __init__(self, environ, start_response):
        self.environ = environ
        self.start = start_response

    def __iter__(self):
        status = '200 OK'
        response_headers = [('Content-type', 'text/plain')]
        self.start(status, response_headers)
        content = ''
        for k,v in self.environ.iteritems():
            content += '%s:%s \n' % (k,v)
        yield content#返回的是字符串
</code></pre>

<p>服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app3)
</code></pre>

<p>这里注意，和上面的比较可以看出，如果需要把类的实例作为WSGI应用，则类中需要实现call方法，并且作为WSGI应用的应该是这个类的实例。</p>

<h2>5 方法method</h2>

<p>用一个方法来作为WSGI应用，那么这个方法不可能是实例方法（上面已经讲过），一种方式肯定就是类中的静态方法了，类中的静态方法，就当做一个全局函数一样理解吧。</p>

<pre><code>class app4(object):
    def __init__(self):
        pass
    @staticmethod
    def wsgi(environ,start_response):
        start_response("200 OK",[("Content-type","text/plain")])
        content = []
        for k,v in environ.iteritems():
            content.append('%s:%s \n' % (k,v))
        return content#返回的是列表或者字符串
</code></pre>

<p>服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app4.wsgi)
</code></pre>

<p>那么，类方法，可以用么，当然可以，<code>classmethod</code>和<code>staticmethod</code>在使用上可以看做只是参数有个区别而已，如下：</p>

<pre><code>class app5(object):
    def __init__(self):
        print 'This is app5'
        pass
    @classmethod
    def wsgi(cls,environ,start_response):
        start_response("200 OK",[("Content-type","text/plain")])
        content = []
        for k,v in environ.iteritems():
            content.append('%s:%s \n' % (k,v))
        return content #返回列表或者字符串
</code></pre>

<p>服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app5.wsgi)
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2013-03-20 02:34:00</wp:post_date>
		<wp:post_date_gmt>2013-03-19 18:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wsgi-application-style-base</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="category" nicename="web%e5%bc%80%e5%8f%91"><![CDATA[Web开发]]></category>
		<category domain="post_tag" nicename="wsgi"><![CDATA[wsgi]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Python WSGI标准[PEP-0333](http://www.python.org/dev/peps/pep-0333/)中说到一个WSGI是一个可调用callable的对象，这包含了一个函数，一个方法，一个类，或者拥有call方法的实例。下面我就对这句话做一个总结，举几个例子。这里的WSGI应用的功能都是返回请求的环境信息environ。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[WSGI应用常见的几种写法-基本形式]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>世界，你好！</title>
		<link>http://blog.wachang.net/2013/02/hello-world/</link>
		<pubDate>Wed, 27 Feb 2013 05:58:45 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2013-02-27 05:58:45</wp:post_date>
		<wp:post_date_gmt>2013-02-27 05:58:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361944880]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_comments_status</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:1;s:1:"1";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[WordPress 先生]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wordpress.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-02-27 05:58:45</wp:comment_date>
			<wp:comment_date_gmt>2013-02-27 05:58:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您好，这是一条评论。
要删除评论，请先登录，然后再查看这篇文章的评论。登录后您可以看到编辑或者删除评论的选项。]]></wp:comment_content>
			<wp:comment_approved>post-trashed</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>test</title>
		<link>http://blog.wachang.net/2013/02/test-3/</link>
		<pubDate>Wed, 27 Feb 2013 06:26:29 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>haha</h2>

<pre><code>def this is good!
print 'hello'
</code></pre>

<h1>!python</h1>

<p>def class():</p>

<p>不知道中文看起来怎么样啊</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2013-02-27 14:26:29</wp:post_date>
		<wp:post_date_gmt>2013-02-27 06:26:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test-3</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361966225]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test</title>
		<link>http://blog.wachang.net/2013/02/test/</link>
		<pubDate>Wed, 27 Feb 2013 06:39:16 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>我就是来测试下的</h2>

<p>我擦</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2013-02-27 14:39:16</wp:post_date>
		<wp:post_date_gmt>2013-02-27 06:39:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361950229]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>再来测试一下</title>
		<link>http://blog.wachang.net/2013/02/%e5%86%8d%e6%9d%a5%e6%b5%8b%e8%af%95%e4%b8%80%e4%b8%8b/</link>
		<pubDate>Wed, 27 Feb 2013 07:26:00 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[<p>擦擦擦擦</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2013-02-27 15:26:00</wp:post_date>
		<wp:post_date_gmt>2013-02-27 07:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%8d%e6%9d%a5%e6%b5%8b%e8%af%95%e4%b8%80%e4%b8%8b</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361950227]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dsafsf</title>
		<link>http://blog.wachang.net/2013/02/dsafsf/</link>
		<pubDate>Wed, 27 Feb 2013 07:32:30 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[<p>dfsfsdfsd</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2013-02-27 15:32:30</wp:post_date>
		<wp:post_date_gmt>2013-02-27 07:32:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsafsf</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361966223]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test</title>
		<link>http://blog.wachang.net/2013/02/test-2/</link>
		<pubDate>Wed, 27 Feb 2013 10:41:39 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>haha</h2>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2013-02-27 18:41:39</wp:post_date>
		<wp:post_date_gmt>2013-02-27 10:41:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test-2</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1361966220]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RabbitMQ/AMQP 0-9-1 模型入门介绍</title>
		<link>http://blog.wachang.net/2013/02/rabbitmqamqp-0-9-1-%e6%a8%a1%e5%9e%8b%e5%85%a5%e9%97%a8%e4%bb%8b%e7%bb%8d/</link>
		<pubDate>Wed, 27 Feb 2013 13:36:56 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>本文主要是翻译加总结，通过资料的查询，对AMQP有一定了解</p>
  
  <p>RabbitMQ使用的就是AMQP 0-9-1模型，所以本文其实也是在讲RabbitMQ中的一些原理</p>
  
  <p>文末会列出原文地址</p>
</blockquote>

<h2>What is AMQP?</h2>

<p>AMQP，即Advanced Message Queuing Protocol，高级消息队列协议，一个网络应用层协议的开放标准，为面向消息的中间件设计。</p>

<p>说白了，这就是一个消费者生产者模型，模型就是生产者生产出一个消息，发送到一个队列Queue，消费者(也叫做worker)从队列里面取出这个消息。但是AMQP中，这个消息一般来说是一个任务，生产者消费者一般不在同一台机器上，所以，更好的解释就是，一个程序发送一个任务消息给一个队列，然后消费者程序从队列中拿出这个任务信息，进行执行，可能还需要返回结果。</p>

<p>而RabbitMQ，就是实现了这么一个模型的软件，独立的开源实现，服务器端用Erlang语言编写，支持多种客户端，如：Python、 Ruby、.NET、Java、JMS、C、PHP、 ActionScript、XMPP、STOMP等，支持AJAX。RabbitMQ就是一个服务器，实现了队列的管理，一个程序连接这个服务器，把任务发送给服务器（也即是进入了队列），消费者连接服务器，从队列中取出任务消息，然后执行。</p>

<p>中英文对照： Messaging broker:消息协商器,它在TCP/IP等端口监听AMQ消息。 producers：应用程序，产生消息，并publish到消息队列中 consumers：应用程序，接收消息，然后进行处理。</p>

<h2>AMQP 0-9-1 Model流程</h2>

<p>AMQP 0-9-1 Model可以简单的总结如下:P产生消息，然后publish(发布)到exchange(交换机，类比成邮政的邮筒吧)，exchange根据一个规则(bindinds)把消息发送到队列(queue)中，消息协商器要么把消息传递给等待(订阅subdcribe)在某一队列上的的消费者(consumers)，要么消费者就从队列中根据自己的需要取消息。如下图： <img src="http://blog.wachang.net/wp-content/uploads/2013/02/amqp-intro-1.png" alt="AMQP 0-9-1 Model in Brief" /> 当publish消息的时候，P可能还会指定消息的属性（meta-data），可能一些meta会被broker使用，而其余的都是由C来使用的。</p>

<p>因为网络不可靠，应用可能处理消息的时候就挂掉了，所以就有一个<code>消息确认机制message acknowledgements</code>:当消息传递给C的时候X需要通知broker。当使用消息确认机制的时候，一个broker只有在收到C对于此消息已经被接收的通知后才会删除消息。</p>

<p>某些场景，消息发不到合适的C的时候，消息可能会被返回给P，丢弃，或者说放进一个“死亡队列”，由P来决定如何操作。</p>

<p>队列，交换机，绑定作为AMQP中协作的三个元素。（Queues, exchanges and bindings are collectively referred to as AMQP entities.）</p>

<h2>AMQP is a Programmable Protocol</h2>

<h2>Exchanges and Exchange Types</h2>

<p>交换机从P中接收到一个消息，然后路由?(route)发送到一个或者多个队列。交换机的类型和路由的规则和起来就叫做bindins，AMQP 0-9-1 brokers提供了四种交换类型。</p>

<pre><code>交换类型                默认名字
Direct exchange      空字符串或者amq.direct
Fanout exchange      amq.Fanout
Topic exchange       amq.Topic
Headers exchange     amq.match (and amq.headers in RabbitMQ)
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2013-02-27 21:36:56</wp:post_date>
		<wp:post_date_gmt>2013-02-27 13:36:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rabbitmqamqp-0-9-1-%e6%a8%a1%e5%9e%8b%e5%85%a5%e9%97%a8%e4%bb%8b%e7%bb%8d</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1362053685]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test</title>
		<link>http://blog.wachang.net/2013/02/test-4/</link>
		<pubDate>Thu, 28 Feb 2013 02:25:57 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[<p>test</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2013-02-28 10:25:57</wp:post_date>
		<wp:post_date_gmt>2013-02-28 02:25:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test-4</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>bfa_virtual_template</wp:meta_key>
			<wp:meta_value><![CDATA[hierarchy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1362019672]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WSGI应用常见的几种写法-高级形式</title>
		<link>http://blog.wachang.net/2013/03/wsgi-application-style-adv/</link>
		<pubDate>Tue, 19 Mar 2013 18:38:13 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[<p>上一节中说到了WSGI应用的几种基本形式，这一节就来说一些高级的用法，所谓高级，我理解的也就是使用装饰器<code>@</code>，WebOb，以及中间件的形式，当然，还有一些更有意思的用法，比如Paste.Deploy这种载入WSGI应用的形式，我以后会做总结。还是和前篇<a href="http://blog.wachang.net/wsgi-application-style-base/">WSGI应用常见的几种写法-基本形式</a>一样，本文实现的WSGI应用都是一个回显请求环境信息的程序。</p>

<!--more-->

<h2>1 WebOb</h2>

<p>WebOb就是将请求和相应封装成Request和Response类，就可以使用一个类方法简化真个操作，如下，直接将一个字符串作为resp_body传给给Response对象，而不用考虑WSGI中的可迭代对象，这里要注意，Response对象<code>是一个WSGI应用</code>，所以在最后的时候我们使用<code>resp(environ,start_response)</code>就返回了，我们不关心返回的细节问题了，而在标准WSGI中，这一步才只是WSGI应用的入口函数。</p>

<pre><code>def app6(environ, start_response):
    req = Request(environ)
    resp_body = ''
    for k,v in req.environ.iteritems():
        resp_body += '%s:%s\n' % (k,v)
    resp = Response(body=resp_body)
    return resp(environ, start_response)
</code></pre>

<p>服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app6)
</code></pre>

<h2>2 用装饰器@，Controller</h2>

<p>用装饰器@以后，重要的思想就是把WSGI应用关于返回流程的处理（包括header，状态等）和返回Body的处理分开，这样的话实际上一个应用只关注于产生返回的Body就可，而其他的处理流程则交给装饰器controller来完成，这个controller，不要理解成控制神马的，只是一个名字，其原意是作为WSGI中<code>一个资源的控制</code>，不用太操心就当做一个名字就好。</p>

<pre><code>def controller1(func):
    def application(environ,start_response):
        #do something else
        resp_body = func(environ)
        start_response("200 OK",[("Content-type","text/plain")])
        return resp_body
    return application

@controller1
def app7(environ):
    content = []
    for k,v in environ.iteritems():
        content.append('%s:%s \n' % (k,v))
    return content
</code></pre>

<p>服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app7)
</code></pre>

<h2>3 结合WebOb和装饰器</h2>

<p>上面两种方式可能看起来没多大用，但是二者结合到一起，那就不一般了，这样子的话我们用装饰器controller来处理environ,并封装Request和Response，最后让应用函数来处理返回信息，只给出一个字符串Body就可以了。这会大大简化WSGI应用的开发流程。</p>

<pre><code>def controller2(func):
    def replacement(environ, start_response):
        req = Request(environ)
        try:
            resp_body = func(req)
        except exc.HTTPException, e:
            resp_body = e
        resp = Response(body=resp_body)#body must be a string
        resp.status = '200 very OK'
        return resp(environ, start_response)
    return replacement

@controller2
def app8(req):
    ret = ''
    for k,v in req.environ.iteritems():
        ret = ret + '%s:%s \n' % (k,v)
    return ret
</code></pre>

<p>服务端：</p>

<pre><code>    server = make_server('192.168.1.11', 7070, app8)
</code></pre>

<p>以上是用装饰器来装饰一个函数，还有一种用法，用装饰器来装饰一个类。</p>

<pre><code>def controller3(cls):
    def replacement(environ, start_response):
        req = Request(environ)
        instance = cls(req, **req.urlvars)
        method = req.method
        if method == 'GET':
            func = getattr(instance, method.lower())
            resp_body = func()
            if isinstance(resp_body, basestring):
                resp = Response(body=resp_body)
        return resp(environ,start_response)
    return replacement

class App9(object):
    def __init__(self,req,**args):
        self.req = req
    def get(self):
        body = ''
        for k,v in self.req.environ.iteritems():
            body += '%s"%s \n' % (k,v)
        return body

app9 = controller3(App9)
</code></pre>

<p>上面关于类的装饰器可以仔细琢磨一下哈，相应的服务端：</p>

<pre><code>server = make_server('192.168.1.11', 7070, app9)
</code></pre>

<h2>4 总结</h2>

<p>两篇文章我一共说明了9种WSGI应用的写法，当然WSGI只是一个协议，相应的实现还是很灵活的，以后再实践中再分享一些新的用法。整个代码我使用Gist存放，连接在此：<a href="https://gist.github.com/4378216">https://gist.github.com/4378216</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2013-03-20 02:38:13</wp:post_date>
		<wp:post_date_gmt>2013-03-19 18:38:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wsgi-application-style-adv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python-2"><![CDATA[python]]></category>
		<category domain="category" nicename="web%e5%bc%80%e5%8f%91"><![CDATA[Web开发]]></category>
		<category domain="post_tag" nicename="wsgi"><![CDATA[wsgi]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e5%ad%a6%e4%b9%a0"><![CDATA[技术学习]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[上一节中说到了WSGI应用的几种基本形式，这一节就来说一些高级的用法，所谓高级，我理解的也就是使用装饰器`@`，WebOb，以及中间件的形式，当然，还有一些更有意思的用法，比如Paste.Deploy这种载入WSGI应用的形式，我以后会做总结。还是和前篇[WSGI应用常见的几种写法-基本形式](http://op.wachang.net/blog/2012/12/wsgi-application-style-base/)一样，本文实现的WSGI应用都是一个回显请求环境信息的程序。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[WSGI应用常见的几种写法-高级形式]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_content_index_enable</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>记录一下Wordpress博客的备份和恢复</title>
		<link>http://blog.wachang.net/2013/03/wordpress-backup-restore/</link>
		<pubDate>Wed, 20 Mar 2013 12:57:47 +0000</pubDate>
		<dc:creator>ati9550128m</dc:creator>
		<guid isPermaLink="false">http://blog.wachang.net/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[<p>wordpress的特点：</p>

<ul>
<li>所有文章，评论，插件配置信息全部存放于数据库中。</li>
<li>备份wordpress的主程序文件其实没啥意思，因为是php就是一些脚本而已，但是主题文件夹和插件文件夹和附件文件夹一定要备份，恢复的时候覆盖就可以了！</li>
<li>重点备份plugins,themes,uploads三个文件夹，恢复的时候直接覆盖就好。</li>
</ul>

<p>所以，备份wordpress的核心就是，<code>数据库+plugins,themes,uploads文件夹。</code></p>

<!--more-->

<h2>1 备份恢复方法总结</h2>

<h3>phpmyadmin导出数据库，FTP备份恢复相关文件</h3>

<p>但是貌似有点受限于主机提供商。</p>

<h3>WordPress自带的xml导出导入功能。</h3>

<p>能很好的备份文章，但是据说不能备份<code>插件和主题设置</code>，这个就很痛苦了。</p>

<h3>帝国备份王</h3>

<p>一个php程序备份数据库，据说，非常完美。但是我看最新的版本也就是2010年的了，不知道效果怎么样。</p>

<h2>2 我的备份方案</h2>

<p>我自己博客的备份方案：</p>

<ul>
<li>因为我文章是markdown格式，很通用，在github上My_Backup/posts/中备份所有的文章。</li>
<li>数据库就用帝国备份来吧，备份文件不大，放在My_Backup/wordpress/db/中</li>
<li>为了保证数据库备份不出错，就再做一个mydql dump命令的备份吧，放在My_Backup/wordpress/db/xxx.sql中</li>
<li>把plugins,themes,uploads做一个备份，放在My_Backup/wordpress/{plugins,themes,uploads}中</li>
<li>使用wordpress自带的导入导出工具，放在My_Backup/wordpress/xml中</li>
</ul>

<p>这样看来，不管怎么样，我都可以很好的恢复了吧。</p>

<h2>3 参考文章</h2>

<p><a href="http://zmingcx.com/wordpress-backup-and-recovery.html">http://zmingcx.com/wordpress-backup-and-recovery.html</a>
<a href="http://www.kay1987.com/887">http://www.kay1987.com/887</a>
<a href="http://www.phome.net/">http://www.phome.net/</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2013-03-20 20:57:47</wp:post_date>
		<wp:post_date_gmt>2013-03-20 12:57:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress-backup-restore</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
		<category domain="category" nicename="%e8%bf%90%e7%bb%b4%e7%ae%a1%e7%90%86"><![CDATA[运维管理]]></category>
		<wp:postmeta>
			<wp:meta_key>posturl_add_url</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[记录一下Wordpress博客的备份和恢复]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[记录一下Wordpress博客的备份和恢复]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
